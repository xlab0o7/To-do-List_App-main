{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport var EncryptJWT = /*#__PURE__*/function (_ProduceJWT) {\n  _inherits(EncryptJWT, _ProduceJWT);\n  var _super = _createSuper(EncryptJWT);\n  function EncryptJWT() {\n    _classCallCheck(this, EncryptJWT);\n    return _super.apply(this, arguments);\n  }\n  _createClass(EncryptJWT, [{\n    key: \"setProtectedHeader\",\n    value: function setProtectedHeader(protectedHeader) {\n      if (this._protectedHeader) {\n        throw new TypeError('setProtectedHeader can only be called once');\n      }\n      this._protectedHeader = protectedHeader;\n      return this;\n    }\n  }, {\n    key: \"setKeyManagementParameters\",\n    value: function setKeyManagementParameters(parameters) {\n      if (this._keyManagementParameters) {\n        throw new TypeError('setKeyManagementParameters can only be called once');\n      }\n      this._keyManagementParameters = parameters;\n      return this;\n    }\n  }, {\n    key: \"setContentEncryptionKey\",\n    value: function setContentEncryptionKey(cek) {\n      if (this._cek) {\n        throw new TypeError('setContentEncryptionKey can only be called once');\n      }\n      this._cek = cek;\n      return this;\n    }\n  }, {\n    key: \"setInitializationVector\",\n    value: function setInitializationVector(iv) {\n      if (this._iv) {\n        throw new TypeError('setInitializationVector can only be called once');\n      }\n      this._iv = iv;\n      return this;\n    }\n  }, {\n    key: \"replicateIssuerAsHeader\",\n    value: function replicateIssuerAsHeader() {\n      this._replicateIssuerAsHeader = true;\n      return this;\n    }\n  }, {\n    key: \"replicateSubjectAsHeader\",\n    value: function replicateSubjectAsHeader() {\n      this._replicateSubjectAsHeader = true;\n      return this;\n    }\n  }, {\n    key: \"replicateAudienceAsHeader\",\n    value: function replicateAudienceAsHeader() {\n      this._replicateAudienceAsHeader = true;\n      return this;\n    }\n  }, {\n    key: \"encrypt\",\n    value: function () {\n      var _encrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, options) {\n        var enc;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n              if (this._replicateIssuerAsHeader) {\n                this._protectedHeader = _objectSpread(_objectSpread({}, this._protectedHeader), {}, {\n                  iss: this._payload.iss\n                });\n              }\n              if (this._replicateSubjectAsHeader) {\n                this._protectedHeader = _objectSpread(_objectSpread({}, this._protectedHeader), {}, {\n                  sub: this._payload.sub\n                });\n              }\n              if (this._replicateAudienceAsHeader) {\n                this._protectedHeader = _objectSpread(_objectSpread({}, this._protectedHeader), {}, {\n                  aud: this._payload.aud\n                });\n              }\n              enc.setProtectedHeader(this._protectedHeader);\n              if (this._iv) {\n                enc.setInitializationVector(this._iv);\n              }\n              if (this._cek) {\n                enc.setContentEncryptionKey(this._cek);\n              }\n              if (this._keyManagementParameters) {\n                enc.setKeyManagementParameters(this._keyManagementParameters);\n              }\n              return _context.abrupt(\"return\", enc.encrypt(key, options));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function encrypt(_x, _x2) {\n        return _encrypt.apply(this, arguments);\n      }\n      return encrypt;\n    }()\n  }]);\n  return EncryptJWT;\n}(ProduceJWT);","map":{"version":3,"names":["CompactEncrypt","encoder","ProduceJWT","EncryptJWT","protectedHeader","_protectedHeader","TypeError","parameters","_keyManagementParameters","cek","_cek","iv","_iv","_replicateIssuerAsHeader","_replicateSubjectAsHeader","_replicateAudienceAsHeader","key","options","enc","encode","JSON","stringify","_payload","iss","sub","aud","setProtectedHeader","setInitializationVector","setContentEncryptionKey","setKeyManagementParameters","encrypt"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jwt/encrypt.js"],"sourcesContent":["import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}