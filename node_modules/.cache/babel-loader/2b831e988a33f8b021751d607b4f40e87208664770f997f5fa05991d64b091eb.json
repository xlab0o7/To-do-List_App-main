{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n  if (key instanceof Uint8Array) {\n    return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n  }\n  if (isCryptoKey(key)) {\n    checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n    return key;\n  }\n  throw new TypeError(invalidKeyInput.apply(void 0, [key].concat(_toConsumableArray(types), ['Uint8Array'])));\n}\nfunction deriveKey(_x, _x2, _x3, _x4) {\n  return _deriveKey.apply(this, arguments);\n}\nfunction _deriveKey() {\n  _deriveKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(p2s, alg, p2c, key) {\n    var salt, keylen, subtleAlg, wrapAlg, cryptoKey;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          checkP2s(p2s);\n          salt = concatSalt(alg, p2s);\n          keylen = parseInt(alg.slice(13, 16), 10);\n          subtleAlg = {\n            hash: \"SHA-\".concat(alg.slice(8, 11)),\n            iterations: p2c,\n            name: 'PBKDF2',\n            salt: salt\n          };\n          wrapAlg = {\n            length: keylen,\n            name: 'AES-KW'\n          };\n          _context3.next = 7;\n          return getCryptoKey(key, alg);\n        case 7:\n          cryptoKey = _context3.sent;\n          if (!cryptoKey.usages.includes('deriveBits')) {\n            _context3.next = 14;\n            break;\n          }\n          _context3.t0 = Uint8Array;\n          _context3.next = 12;\n          return crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen);\n        case 12:\n          _context3.t1 = _context3.sent;\n          return _context3.abrupt(\"return\", new _context3.t0(_context3.t1));\n        case 14:\n          if (!cryptoKey.usages.includes('deriveKey')) {\n            _context3.next = 16;\n            break;\n          }\n          return _context3.abrupt(\"return\", crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']));\n        case 16:\n          throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _deriveKey.apply(this, arguments);\n}\nexport var encrypt = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(alg, key, cek) {\n    var p2c,\n      p2s,\n      derived,\n      encryptedKey,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          p2c = _args.length > 3 && _args[3] !== undefined ? _args[3] : 2048;\n          p2s = _args.length > 4 && _args[4] !== undefined ? _args[4] : random(new Uint8Array(16));\n          _context.next = 4;\n          return deriveKey(p2s, alg, p2c, key);\n        case 4:\n          derived = _context.sent;\n          _context.next = 7;\n          return wrap(alg.slice(-6), derived, cek);\n        case 7:\n          encryptedKey = _context.sent;\n          return _context.abrupt(\"return\", {\n            encryptedKey: encryptedKey,\n            p2c: p2c,\n            p2s: base64url(p2s)\n          });\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function encrypt(_x5, _x6, _x7) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var decrypt = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(alg, key, encryptedKey, p2c, p2s) {\n    var derived;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return deriveKey(p2s, alg, p2c, key);\n        case 2:\n          derived = _context2.sent;\n          return _context2.abrupt(\"return\", unwrap(alg.slice(-6), derived, encryptedKey));\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function decrypt(_x8, _x9, _x10, _x11, _x12) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["random","p2s","concatSalt","encode","base64url","wrap","unwrap","checkP2s","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","getCryptoKey","key","alg","Uint8Array","subtle","importKey","TypeError","deriveKey","p2c","salt","keylen","parseInt","slice","subtleAlg","hash","iterations","name","wrapAlg","length","cryptoKey","usages","includes","deriveBits","encrypt","cek","derived","encryptedKey","decrypt"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/runtime/pbes2kw.js"],"sourcesContent":["import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}