{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getClientAuthenticationWithDependencies = void 0;\nvar solid_client_authn_core_1 = require(\"@inrupt/solid-client-authn-core\");\nvar StorageUtility_1 = __importDefault(require(\"./storage/StorageUtility\"));\nvar ClientAuthentication_1 = __importDefault(require(\"./ClientAuthentication\"));\nvar OidcLoginHandler_1 = __importDefault(require(\"./login/oidc/OidcLoginHandler\"));\nvar AuthorizationCodeWithPkceOidcHandler_1 = __importDefault(require(\"./login/oidc/oidcHandlers/AuthorizationCodeWithPkceOidcHandler\"));\nvar IssuerConfigFetcher_1 = __importDefault(require(\"./login/oidc/IssuerConfigFetcher\"));\nvar FallbackRedirectHandler_1 = require(\"./login/oidc/incomingRedirectHandler/FallbackRedirectHandler\");\nvar GeneralLogoutHandler_1 = __importDefault(require(\"./logout/GeneralLogoutHandler\"));\nvar SessionInfoManager_1 = require(\"./sessionInfo/SessionInfoManager\");\nvar AuthCodeRedirectHandler_1 = require(\"./login/oidc/incomingRedirectHandler/AuthCodeRedirectHandler\");\nvar AggregateRedirectHandler_1 = __importDefault(require(\"./login/oidc/AggregateRedirectHandler\"));\nvar BrowserStorage_1 = __importDefault(require(\"./storage/BrowserStorage\"));\nvar Redirector_1 = __importDefault(require(\"./login/oidc/Redirector\"));\nvar ClientRegistrar_1 = __importDefault(require(\"./login/oidc/ClientRegistrar\"));\nvar ErrorOidcHandler_1 = require(\"./login/oidc/incomingRedirectHandler/ErrorOidcHandler\");\nvar TokenRefresher_1 = __importDefault(require(\"./login/oidc/refresh/TokenRefresher\"));\nfunction getClientAuthenticationWithDependencies(dependencies) {\n  var inMemoryStorage = new solid_client_authn_core_1.InMemoryStorage();\n  var secureStorage = dependencies.secureStorage || inMemoryStorage;\n  var insecureStorage = dependencies.insecureStorage || new BrowserStorage_1.default();\n  var storageUtility = new StorageUtility_1.default(secureStorage, insecureStorage);\n  var issuerConfigFetcher = new IssuerConfigFetcher_1.default(storageUtility);\n  var clientRegistrar = new ClientRegistrar_1.default(storageUtility);\n  var sessionInfoManager = new SessionInfoManager_1.SessionInfoManager(storageUtility);\n  var tokenRefresher = new TokenRefresher_1.default(storageUtility, issuerConfigFetcher, clientRegistrar);\n  var loginHandler = new OidcLoginHandler_1.default(storageUtility, new AuthorizationCodeWithPkceOidcHandler_1.default(storageUtility, new Redirector_1.default()), issuerConfigFetcher, clientRegistrar);\n  var redirectHandler = new AggregateRedirectHandler_1.default([new ErrorOidcHandler_1.ErrorOidcHandler(), new AuthCodeRedirectHandler_1.AuthCodeRedirectHandler(storageUtility, sessionInfoManager, issuerConfigFetcher, clientRegistrar, tokenRefresher), new FallbackRedirectHandler_1.FallbackRedirectHandler()]);\n  return new ClientAuthentication_1.default(loginHandler, redirectHandler, new GeneralLogoutHandler_1.default(sessionInfoManager), sessionInfoManager, issuerConfigFetcher);\n}\nexports.getClientAuthenticationWithDependencies = getClientAuthenticationWithDependencies;","map":{"version":3,"mappings":";;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,SAAgBA,uCAAuC,CAACC,YAGvD;EACC,IAAMC,eAAe,GAAG,IAAIC,yCAAe,EAAE;EAC7C,IAAMC,aAAa,GAAGH,YAAY,CAACG,aAAa,IAAIF,eAAe;EACnE,IAAMG,eAAe,GAAGJ,YAAY,CAACI,eAAe,IAAI,IAAIC,wBAAc,EAAE;EAE5E,IAAMC,cAAc,GAAG,IAAIC,wBAAqB,CAC9CJ,aAAa,EACbC,eAAe,CAChB;EAED,IAAMI,mBAAmB,GAAG,IAAIC,6BAAmB,CAACH,cAAc,CAAC;EACnE,IAAMI,eAAe,GAAG,IAAIC,yBAAe,CAACL,cAAc,CAAC;EAE3D,IAAMM,kBAAkB,GAAG,IAAIC,uCAAkB,CAACP,cAAc,CAAC;EAEjE,IAAMQ,cAAc,GAAG,IAAIC,wBAAc,CACvCT,cAAc,EACdE,mBAAmB,EACnBE,eAAe,CAChB;EAGD,IAAMM,YAAY,GAAG,IAAIC,0BAAgB,CACvCX,cAAc,EACd,IAAIY,8CAAoC,CAACZ,cAAc,EAAE,IAAIa,oBAAU,EAAE,CAAC,EAC1EX,mBAAmB,EACnBE,eAAe,CAChB;EAED,IAAMU,eAAe,GAAG,IAAIC,kCAAwB,CAAC,CACnD,IAAIC,mCAAgB,EAAE,EACtB,IAAIC,iDAAuB,CACzBjB,cAAc,EACdM,kBAAkB,EAClBJ,mBAAmB,EACnBE,eAAe,EACfI,cAAc,CACf,EAGD,IAAIU,iDAAuB,EAAE,CAC9B,CAAC;EAEF,OAAO,IAAIC,8BAAoB,CAC7BT,YAAY,EACZI,eAAe,EACf,IAAIM,8BAAoB,CAACd,kBAAkB,CAAC,EAC5CA,kBAAkB,EAClBJ,mBAAmB,CACpB;AACH;AArDAmB","names":["getClientAuthenticationWithDependencies","dependencies","inMemoryStorage","solid_client_authn_core_1","secureStorage","insecureStorage","BrowserStorage_1","storageUtility","StorageUtility_1","issuerConfigFetcher","IssuerConfigFetcher_1","clientRegistrar","ClientRegistrar_1","sessionInfoManager","SessionInfoManager_1","tokenRefresher","TokenRefresher_1","loginHandler","OidcLoginHandler_1","AuthorizationCodeWithPkceOidcHandler_1","Redirector_1","redirectHandler","AggregateRedirectHandler_1","ErrorOidcHandler_1","AuthCodeRedirectHandler_1","FallbackRedirectHandler_1","ClientAuthentication_1","GeneralLogoutHandler_1","exports"],"sources":["E:\\react-todo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\dependencies.ts"],"sourcesContent":["//\n// Copyright 2022 Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Top Level core document. Responsible for setting up the dependency graph\n */\nimport { IStorage, InMemoryStorage } from \"@inrupt/solid-client-authn-core\";\nimport StorageUtilityBrowser from \"./storage/StorageUtility\";\nimport ClientAuthentication from \"./ClientAuthentication\";\nimport OidcLoginHandler from \"./login/oidc/OidcLoginHandler\";\nimport AuthorizationCodeWithPkceOidcHandler from \"./login/oidc/oidcHandlers/AuthorizationCodeWithPkceOidcHandler\";\nimport IssuerConfigFetcher from \"./login/oidc/IssuerConfigFetcher\";\nimport { FallbackRedirectHandler } from \"./login/oidc/incomingRedirectHandler/FallbackRedirectHandler\";\nimport GeneralLogoutHandler from \"./logout/GeneralLogoutHandler\";\nimport { SessionInfoManager } from \"./sessionInfo/SessionInfoManager\";\nimport { AuthCodeRedirectHandler } from \"./login/oidc/incomingRedirectHandler/AuthCodeRedirectHandler\";\nimport AggregateRedirectHandler from \"./login/oidc/AggregateRedirectHandler\";\nimport BrowserStorage from \"./storage/BrowserStorage\";\nimport Redirector from \"./login/oidc/Redirector\";\nimport ClientRegistrar from \"./login/oidc/ClientRegistrar\";\nimport { ErrorOidcHandler } from \"./login/oidc/incomingRedirectHandler/ErrorOidcHandler\";\nimport TokenRefresher from \"./login/oidc/refresh/TokenRefresher\";\n\n/**\n *\n * @param dependencies\n * @deprecated This function will be removed from the external API in an upcoming release.\n */\nexport function getClientAuthenticationWithDependencies(dependencies: {\n  secureStorage?: IStorage;\n  insecureStorage?: IStorage;\n}): ClientAuthentication {\n  const inMemoryStorage = new InMemoryStorage();\n  const secureStorage = dependencies.secureStorage || inMemoryStorage;\n  const insecureStorage = dependencies.insecureStorage || new BrowserStorage();\n\n  const storageUtility = new StorageUtilityBrowser(\n    secureStorage,\n    insecureStorage\n  );\n\n  const issuerConfigFetcher = new IssuerConfigFetcher(storageUtility);\n  const clientRegistrar = new ClientRegistrar(storageUtility);\n\n  const sessionInfoManager = new SessionInfoManager(storageUtility);\n\n  const tokenRefresher = new TokenRefresher(\n    storageUtility,\n    issuerConfigFetcher,\n    clientRegistrar\n  );\n\n  // make new handler for redirect and login\n  const loginHandler = new OidcLoginHandler(\n    storageUtility,\n    new AuthorizationCodeWithPkceOidcHandler(storageUtility, new Redirector()),\n    issuerConfigFetcher,\n    clientRegistrar\n  );\n\n  const redirectHandler = new AggregateRedirectHandler([\n    new ErrorOidcHandler(),\n    new AuthCodeRedirectHandler(\n      storageUtility,\n      sessionInfoManager,\n      issuerConfigFetcher,\n      clientRegistrar,\n      tokenRefresher\n    ),\n    // This catch-all class will always be able to handle the\n    // redirect IRI, so it must be registered last.\n    new FallbackRedirectHandler(),\n  ]);\n\n  return new ClientAuthentication(\n    loginHandler,\n    redirectHandler,\n    new GeneralLogoutHandler(sessionInfoManager),\n    sessionInfoManager,\n    issuerConfigFetcher\n  );\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}