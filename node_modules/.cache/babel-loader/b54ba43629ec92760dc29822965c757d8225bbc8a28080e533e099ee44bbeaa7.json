{"ast":null,"code":"import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\nimport { default as DataFactory, Term, NamedNode, Literal, BlankNode, Variable, DefaultGraph, Quad, Triple, termFromId, termToId } from './N3DataFactory';\n\n// Named exports\nexport { Lexer, Parser, Writer, Store, StreamParser, StreamWriter, Util, DataFactory, Term, NamedNode, Literal, BlankNode, Variable, DefaultGraph, Quad, Triple, termFromId, termToId };\n\n// Export all named exports as a default object for backward compatibility\nexport default {\n  Lexer: Lexer,\n  Parser: Parser,\n  Writer: Writer,\n  Store: Store,\n  StreamParser: StreamParser,\n  StreamWriter: StreamWriter,\n  Util: Util,\n  DataFactory: DataFactory,\n  Term: Term,\n  NamedNode: NamedNode,\n  Literal: Literal,\n  BlankNode: BlankNode,\n  Variable: Variable,\n  DefaultGraph: DefaultGraph,\n  Quad: Quad,\n  Triple: Triple,\n  termFromId: termFromId,\n  termToId: termToId\n};","map":{"version":3,"names":["Lexer","Parser","Writer","Store","StreamParser","StreamWriter","Util","default","DataFactory","Term","NamedNode","Literal","BlankNode","Variable","DefaultGraph","Quad","Triple","termFromId","termToId"],"sources":["E:/react-todo-app/node_modules/n3/src/index.js"],"sourcesContent":["import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\n// Named exports\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n\n// Export all named exports as a default object for backward compatibility\nexport default {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,WAAW;AAC7B,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,KAAK,MAAM,WAAW;AAC7B,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAO,KAAKC,IAAI,MAAM,UAAU;AAEhC,SACEC,OAAO,IAAIC,WAAW,EAEtBC,IAAI,EACJC,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,YAAY,EACZC,IAAI,EACJC,MAAM,EAENC,UAAU,EACVC,QAAQ,QACH,iBAAiB;;AAExB;AACA,SACElB,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,YAAY,EACZC,YAAY,EACZC,IAAI,EAEJE,WAAW,EAEXC,IAAI,EACJC,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,YAAY,EACZC,IAAI,EACJC,MAAM,EAENC,UAAU,EACVC,QAAQ;;AAGV;AACA,eAAe;EACblB,KAAK,EAALA,KAAK;EACLC,MAAM,EAANA,MAAM;EACNC,MAAM,EAANA,MAAM;EACNC,KAAK,EAALA,KAAK;EACLC,YAAY,EAAZA,YAAY;EACZC,YAAY,EAAZA,YAAY;EACZC,IAAI,EAAJA,IAAI;EAEJE,WAAW,EAAXA,WAAW;EAEXC,IAAI,EAAJA,IAAI;EACJC,SAAS,EAATA,SAAS;EACTC,OAAO,EAAPA,OAAO;EACPC,SAAS,EAATA,SAAS;EACTC,QAAQ,EAARA,QAAQ;EACRC,YAAY,EAAZA,YAAY;EACZC,IAAI,EAAJA,IAAI;EACJC,MAAM,EAANA,MAAM;EAENC,UAAU,EAAVA,UAAU;EACVC,QAAQ,EAARA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}