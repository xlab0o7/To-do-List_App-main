{"ast":null,"code":"/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => typeof v === 'boolean' || Object.prototype.toString.call(v) === '[object Boolean]';\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) && (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => typeof v === 'number' || Object.prototype.toString.call(v) === '[object Number]';\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => typeof v === 'string' || Object.prototype.toString.call(v) === '[object String]';\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';","map":{"version":3,"names":["api","module","exports","isArray","Array","isBoolean","v","Object","prototype","toString","call","isDouble","isNumber","String","indexOf","Math","abs","isEmptyObject","isObject","keys","length","isNumeric","isNaN","parseFloat","isFinite","isString","isUndefined"],"sources":["E:/react-todo-app/node_modules/jsonld/lib/types.js"],"sourcesContent":["/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n"],"mappings":"AAAA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,GAAG,GAAG,CAAC,CAAC;AACdC,MAAM,CAACC,OAAO,GAAGF,GAAG;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,GAAG,CAACG,OAAO,GAAGC,KAAK,CAACD,OAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,GAAG,CAACK,SAAS,GAAGC,CAAC,IAAK,OAAOA,CAAC,KAAK,SAAS,IAC1CC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,CAAC,CAAC,KAAK,kBAAmB;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,GAAG,CAACW,QAAQ,GAAGL,CAAC,IAAIN,GAAG,CAACY,QAAQ,CAACN,CAAC,CAAC,KAChCO,MAAM,CAACP,CAAC,CAAC,CAACQ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIC,IAAI,CAACC,GAAG,CAACV,CAAC,CAAC,IAAI,IAAI,CAAC;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,GAAG,CAACiB,aAAa,GAAGX,CAAC,IAAIN,GAAG,CAACkB,QAAQ,CAACZ,CAAC,CAAC,IAAIC,MAAM,CAACY,IAAI,CAACb,CAAC,CAAC,CAACc,MAAM,KAAK,CAAC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACApB,GAAG,CAACY,QAAQ,GAAGN,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,IACxCC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,CAAC,CAAC,KAAK,iBAAkB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,GAAG,CAACqB,SAAS,GAAGf,CAAC,IAAI,CAACgB,KAAK,CAACC,UAAU,CAACjB,CAAC,CAAC,CAAC,IAAIkB,QAAQ,CAAClB,CAAC,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,GAAG,CAACkB,QAAQ,GAAGZ,CAAC,IAAIC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,CAAC,CAAC,KAAK,iBAAiB;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,GAAG,CAACyB,QAAQ,GAAGnB,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,IACxCC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,CAAC,CAAC,KAAK,iBAAkB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,GAAG,CAAC0B,WAAW,GAAGpB,CAAC,IAAI,OAAOA,CAAC,KAAK,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}