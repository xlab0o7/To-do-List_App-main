{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nvar check = function check(value, description) {\n  if (typeof value !== 'string' || !value) {\n    throw new JWKInvalid(\"\".concat(description, \" missing or invalid\"));\n  }\n};\nexport function calculateJwkThumbprint(_x, _x2) {\n  return _calculateJwkThumbprint.apply(this, arguments);\n}\nfunction _calculateJwkThumbprint() {\n  _calculateJwkThumbprint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwk, digestAlgorithm) {\n    var components, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (isObject(jwk)) {\n            _context.next = 2;\n            break;\n          }\n          throw new TypeError('JWK must be an object');\n        case 2:\n          digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = 'sha256';\n          if (!(digestAlgorithm !== 'sha256' && digestAlgorithm !== 'sha384' && digestAlgorithm !== 'sha512')) {\n            _context.next = 5;\n            break;\n          }\n          throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n        case 5:\n          _context.t0 = jwk.kty;\n          _context.next = _context.t0 === 'EC' ? 8 : _context.t0 === 'OKP' ? 13 : _context.t0 === 'RSA' ? 17 : _context.t0 === 'oct' ? 21 : 24;\n          break;\n        case 8:\n          check(jwk.crv, '\"crv\" (Curve) Parameter');\n          check(jwk.x, '\"x\" (X Coordinate) Parameter');\n          check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n          components = {\n            crv: jwk.crv,\n            kty: jwk.kty,\n            x: jwk.x,\n            y: jwk.y\n          };\n          return _context.abrupt(\"break\", 25);\n        case 13:\n          check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n          check(jwk.x, '\"x\" (Public Key) Parameter');\n          components = {\n            crv: jwk.crv,\n            kty: jwk.kty,\n            x: jwk.x\n          };\n          return _context.abrupt(\"break\", 25);\n        case 17:\n          check(jwk.e, '\"e\" (Exponent) Parameter');\n          check(jwk.n, '\"n\" (Modulus) Parameter');\n          components = {\n            e: jwk.e,\n            kty: jwk.kty,\n            n: jwk.n\n          };\n          return _context.abrupt(\"break\", 25);\n        case 21:\n          check(jwk.k, '\"k\" (Key Value) Parameter');\n          components = {\n            k: jwk.k,\n            kty: jwk.kty\n          };\n          return _context.abrupt(\"break\", 25);\n        case 24:\n          throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n        case 25:\n          data = encoder.encode(JSON.stringify(components));\n          _context.t1 = base64url;\n          _context.next = 29;\n          return digest(digestAlgorithm, data);\n        case 29:\n          _context.t2 = _context.sent;\n          return _context.abrupt(\"return\", (0, _context.t1)(_context.t2));\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _calculateJwkThumbprint.apply(this, arguments);\n}\nexport function calculateJwkThumbprintUri(_x3, _x4) {\n  return _calculateJwkThumbprintUri.apply(this, arguments);\n}\nfunction _calculateJwkThumbprintUri() {\n  _calculateJwkThumbprintUri = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(jwk, digestAlgorithm) {\n    var thumbprint;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = 'sha256';\n          _context2.next = 3;\n          return calculateJwkThumbprint(jwk, digestAlgorithm);\n        case 3:\n          thumbprint = _context2.sent;\n          return _context2.abrupt(\"return\", \"urn:ietf:params:oauth:jwk-thumbprint:sha-\".concat(digestAlgorithm.slice(-3), \":\").concat(thumbprint));\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _calculateJwkThumbprintUri.apply(this, arguments);\n}","map":{"version":3,"names":["digest","encode","base64url","JOSENotSupported","JWKInvalid","encoder","isObject","check","value","description","calculateJwkThumbprint","jwk","digestAlgorithm","TypeError","kty","crv","x","y","components","e","n","k","data","JSON","stringify","calculateJwkThumbprintUri","thumbprint","slice"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jwk/thumbprint.js"],"sourcesContent":["import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}