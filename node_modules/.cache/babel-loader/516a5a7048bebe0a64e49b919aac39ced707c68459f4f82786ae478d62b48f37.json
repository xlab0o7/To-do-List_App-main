{"ast":null,"code":"'use strict';\n\nconst bufferModule = require('buffer');\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\nconst Blob = globalThis.Blob || bufferModule.Blob;\n/* eslint-disable indent */\nconst isBlob = typeof Blob !== 'undefined' ? function isBlob(b) {\n  // eslint-disable-next-line indent\n  return b instanceof Blob;\n} : function isBlob(b) {\n  return false;\n};\n/* eslint-enable indent */\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n    }\n    let message = '';\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`;\n    }\n    super(message);\n    this.name = 'AggregateError';\n    this.errors = errors;\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false;\n    return function () {\n      if (called) {\n        return;\n      }\n      called = true;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      callback.apply(this, args);\n    };\n  },\n  createDeferredPromise: function () {\n    let resolve;\n    let reject;\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    return {\n      promise,\n      resolve,\n      reject\n    };\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn(function (err) {\n        if (err) {\n          return reject(err);\n        }\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        return resolve(...args);\n      });\n    });\n  },\n  debuglog() {\n    return function () {};\n  },\n  format(format) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function () {\n      for (var _len4 = arguments.length, _ref = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        _ref[_key4] = arguments[_key4];\n      }\n      let [_unused, type] = _ref;\n      const replacement = args.shift();\n      if (type === 'f') {\n        return replacement.toFixed(6);\n      } else if (type === 'j') {\n        return JSON.stringify(replacement);\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : '';\n        return `${ctor} {}`.trim();\n      } else {\n        return replacement.toString();\n      }\n    });\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`;\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``;\n          }\n        }\n        return `'${value}'`;\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN';\n        } else if (Object.is(value, -0)) {\n          return String(value);\n        }\n        return value;\n      case 'bigint':\n        return `${String(value)}n`;\n      case 'boolean':\n      case 'undefined':\n        return String(value);\n      case 'object':\n        return '{}';\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction;\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr);\n    }\n  },\n  isBlob\n};\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom');","map":{"version":3,"names":["bufferModule","require","AsyncFunction","Object","getPrototypeOf","constructor","Blob","globalThis","isBlob","b","AggregateError","Error","errors","Array","isArray","TypeError","message","i","length","stack","name","module","exports","kEmptyObject","freeze","once","callback","called","args","apply","createDeferredPromise","resolve","reject","promise","Promise","res","rej","promisify","fn","err","debuglog","format","replace","_unused","type","replacement","shift","toFixed","JSON","stringify","ctor","trim","toString","inspect","value","includes","isNaN","is","String","types","isAsyncFunction","isArrayBufferView","arr","ArrayBuffer","isView","custom","Symbol","for"],"sources":["E:/react-todo-app/node_modules/n3/node_modules/readable-stream/lib/ours/util.js"],"sourcesContent":["'use strict'\n\nconst bufferModule = require('buffer')\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n    let message = ''\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n      called = true\n      callback.apply(this, args)\n    }\n  },\n  createDeferredPromise: function () {\n    let resolve\n    let reject\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(...args)\n      })\n    })\n  },\n  debuglog() {\n    return function () {}\n  },\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}