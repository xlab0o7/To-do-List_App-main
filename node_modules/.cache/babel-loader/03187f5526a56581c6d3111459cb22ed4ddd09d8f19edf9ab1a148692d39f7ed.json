{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectWithoutProperties from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"ext\", \"key_ops\", \"alg\", \"use\"];\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nvar keyToJWK = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n    var _yield$crypto$subtle$, ext, key_ops, alg, use, jwk;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(key instanceof Uint8Array)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            kty: 'oct',\n            k: base64url(key)\n          });\n        case 2:\n          if (isCryptoKey(key)) {\n            _context.next = 4;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [key].concat(_toConsumableArray(types), ['Uint8Array'])));\n        case 4:\n          if (key.extractable) {\n            _context.next = 6;\n            break;\n          }\n          throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n        case 6:\n          _context.next = 8;\n          return crypto.subtle.exportKey('jwk', key);\n        case 8:\n          _yield$crypto$subtle$ = _context.sent;\n          ext = _yield$crypto$subtle$.ext;\n          key_ops = _yield$crypto$subtle$.key_ops;\n          alg = _yield$crypto$subtle$.alg;\n          use = _yield$crypto$subtle$.use;\n          jwk = _objectWithoutProperties(_yield$crypto$subtle$, _excluded);\n          return _context.abrupt(\"return\", jwk);\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function keyToJWK(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default keyToJWK;","map":{"version":3,"names":["crypto","isCryptoKey","invalidKeyInput","encode","base64url","types","keyToJWK","key","Uint8Array","kty","k","TypeError","extractable","subtle","exportKey","ext","key_ops","alg","use","jwk"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/runtime/key_to_jwk.js"],"sourcesContent":["import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n"],"mappings":";;;;;AAAA,OAAOA,MAAM,IAAIC,WAAW,QAAQ,gBAAgB;AACpD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,MAAM,IAAIC,SAAS,QAAQ,gBAAgB;AACpD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,IAAMC,QAAQ;EAAA,sEAAG,iBAAOC,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA,MACnBA,GAAG,YAAYC,UAAU;YAAA;YAAA;UAAA;UAAA,iCAClB;YACHC,GAAG,EAAE,KAAK;YACVC,CAAC,EAAEN,SAAS,CAACG,GAAG;UACpB,CAAC;QAAA;UAAA,IAEAN,WAAW,CAACM,GAAG,CAAC;YAAA;YAAA;UAAA;UAAA,MACX,IAAII,SAAS,CAACT,eAAe,gBAACK,GAAG,4BAAKF,KAAK,IAAE,YAAY,GAAC,CAAC;QAAA;UAAA,IAEhEE,GAAG,CAACK,WAAW;YAAA;YAAA;UAAA;UAAA,MACV,IAAID,SAAS,CAAC,uDAAuD,CAAC;QAAA;UAAA;UAAA,OAE/BX,MAAM,CAACa,MAAM,CAACC,SAAS,CAAC,KAAK,EAAEP,GAAG,CAAC;QAAA;UAAA;UAA5EQ,GAAG,yBAAHA,GAAG;UAAEC,OAAO,yBAAPA,OAAO;UAAEC,GAAG,yBAAHA,GAAG;UAAEC,GAAG,yBAAHA,GAAG;UAAKC,GAAG;UAAA,iCAC/BA,GAAG;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACb;EAAA,gBAfKb,QAAQ;IAAA;EAAA;AAAA,GAeb;AACD,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}