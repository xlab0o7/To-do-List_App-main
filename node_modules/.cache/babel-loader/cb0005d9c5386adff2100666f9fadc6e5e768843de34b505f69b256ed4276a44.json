{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport function deriveKey(_x, _x2, _x3, _x4) {\n  return _deriveKey.apply(this, arguments);\n}\nfunction _deriveKey() {\n  _deriveKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(publicKey, privateKey, algorithm, keyLength) {\n    var apu,\n      apv,\n      value,\n      length,\n      sharedSecret,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          apu = _args.length > 4 && _args[4] !== undefined ? _args[4] : new Uint8Array(0);\n          apv = _args.length > 5 && _args[5] !== undefined ? _args[5] : new Uint8Array(0);\n          if (isCryptoKey(publicKey)) {\n            _context.next = 4;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [publicKey].concat(_toConsumableArray(types))));\n        case 4:\n          checkEncCryptoKey(publicKey, 'ECDH');\n          if (isCryptoKey(privateKey)) {\n            _context.next = 7;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [privateKey].concat(_toConsumableArray(types))));\n        case 7:\n          checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n          value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n          if (publicKey.algorithm.name === 'X25519') {\n            length = 256;\n          } else if (publicKey.algorithm.name === 'X448') {\n            length = 448;\n          } else {\n            length = Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n          }\n          _context.t0 = Uint8Array;\n          _context.next = 13;\n          return crypto.subtle.deriveBits({\n            name: publicKey.algorithm.name,\n            public: publicKey\n          }, privateKey, length);\n        case 13:\n          _context.t1 = _context.sent;\n          sharedSecret = new _context.t0(_context.t1);\n          return _context.abrupt(\"return\", concatKdf(sharedSecret, keyLength, value));\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _deriveKey.apply(this, arguments);\n}\nexport function generateEpk(_x5) {\n  return _generateEpk.apply(this, arguments);\n}\nfunction _generateEpk() {\n  _generateEpk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (isCryptoKey(key)) {\n            _context2.next = 2;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [key].concat(_toConsumableArray(types))));\n        case 2:\n          return _context2.abrupt(\"return\", crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']));\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _generateEpk.apply(this, arguments);\n}\nexport function ecdhAllowed(key) {\n  if (!isCryptoKey(key)) {\n    throw new TypeError(invalidKeyInput.apply(void 0, [key].concat(_toConsumableArray(types))));\n  }\n  return ['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) || key.algorithm.name === 'X25519' || key.algorithm.name === 'X448';\n}","map":{"version":3,"names":["encoder","concat","uint32be","lengthAndInput","concatKdf","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","deriveKey","publicKey","privateKey","algorithm","keyLength","apu","Uint8Array","apv","TypeError","value","encode","name","length","Math","ceil","parseInt","namedCurve","substr","subtle","deriveBits","public","sharedSecret","generateEpk","key","generateKey","ecdhAllowed","includes"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/runtime/ecdhes.js"],"sourcesContent":["import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}