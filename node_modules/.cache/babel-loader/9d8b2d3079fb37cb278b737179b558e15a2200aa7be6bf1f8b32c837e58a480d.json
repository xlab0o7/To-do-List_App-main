{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport function flattenedDecrypt(_x, _x2, _x3) {\n  return _flattenedDecrypt.apply(this, arguments);\n}\nfunction _flattenedDecrypt() {\n  _flattenedDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwe, key, options) {\n    var _a, parsedProt, _protectedHeader, joseHeader, alg, enc, keyManagementAlgorithms, contentEncryptionAlgorithms, encryptedKey, resolvedKey, cek, iv, tag, protectedHeader, additionalData, plaintext, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (isObject(jwe)) {\n            _context.next = 2;\n            break;\n          }\n          throw new JWEInvalid('Flattened JWE must be an object');\n        case 2:\n          if (!(jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined)) {\n            _context.next = 4;\n            break;\n          }\n          throw new JWEInvalid('JOSE Header missing');\n        case 4:\n          if (!(typeof jwe.iv !== 'string')) {\n            _context.next = 6;\n            break;\n          }\n          throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n        case 6:\n          if (!(typeof jwe.ciphertext !== 'string')) {\n            _context.next = 8;\n            break;\n          }\n          throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n        case 8:\n          if (!(typeof jwe.tag !== 'string')) {\n            _context.next = 10;\n            break;\n          }\n          throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n        case 10:\n          if (!(jwe.protected !== undefined && typeof jwe.protected !== 'string')) {\n            _context.next = 12;\n            break;\n          }\n          throw new JWEInvalid('JWE Protected Header incorrect type');\n        case 12:\n          if (!(jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string')) {\n            _context.next = 14;\n            break;\n          }\n          throw new JWEInvalid('JWE Encrypted Key incorrect type');\n        case 14:\n          if (!(jwe.aad !== undefined && typeof jwe.aad !== 'string')) {\n            _context.next = 16;\n            break;\n          }\n          throw new JWEInvalid('JWE AAD incorrect type');\n        case 16:\n          if (!(jwe.header !== undefined && !isObject(jwe.header))) {\n            _context.next = 18;\n            break;\n          }\n          throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n        case 18:\n          if (!(jwe.unprotected !== undefined && !isObject(jwe.unprotected))) {\n            _context.next = 20;\n            break;\n          }\n          throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n        case 20:\n          if (!jwe.protected) {\n            _context.next = 29;\n            break;\n          }\n          _context.prev = 21;\n          _protectedHeader = base64url(jwe.protected);\n          parsedProt = JSON.parse(decoder.decode(_protectedHeader));\n          _context.next = 29;\n          break;\n        case 26:\n          _context.prev = 26;\n          _context.t0 = _context[\"catch\"](21);\n          throw new JWEInvalid('JWE Protected Header is invalid');\n        case 29:\n          if (isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n            _context.next = 31;\n            break;\n          }\n          throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n        case 31:\n          joseHeader = _objectSpread(_objectSpread(_objectSpread({}, parsedProt), jwe.header), jwe.unprotected);\n          validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n          if (!(joseHeader.zip !== undefined)) {\n            _context.next = 38;\n            break;\n          }\n          if (!(!parsedProt || !parsedProt.zip)) {\n            _context.next = 36;\n            break;\n          }\n          throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        case 36:\n          if (!(joseHeader.zip !== 'DEF')) {\n            _context.next = 38;\n            break;\n          }\n          throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        case 38:\n          alg = joseHeader.alg, enc = joseHeader.enc;\n          if (!(typeof alg !== 'string' || !alg)) {\n            _context.next = 41;\n            break;\n          }\n          throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n        case 41:\n          if (!(typeof enc !== 'string' || !enc)) {\n            _context.next = 43;\n            break;\n          }\n          throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n        case 43:\n          keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n          contentEncryptionAlgorithms = options && validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n          if (!(keyManagementAlgorithms && !keyManagementAlgorithms.has(alg))) {\n            _context.next = 47;\n            break;\n          }\n          throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n        case 47:\n          if (!(contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc))) {\n            _context.next = 49;\n            break;\n          }\n          throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n        case 49:\n          if (jwe.encrypted_key !== undefined) {\n            encryptedKey = base64url(jwe.encrypted_key);\n          }\n          resolvedKey = false;\n          if (!(typeof key === 'function')) {\n            _context.next = 56;\n            break;\n          }\n          _context.next = 54;\n          return key(parsedProt, jwe);\n        case 54:\n          key = _context.sent;\n          resolvedKey = true;\n        case 56:\n          _context.prev = 56;\n          _context.next = 59;\n          return decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n        case 59:\n          cek = _context.sent;\n          _context.next = 67;\n          break;\n        case 62:\n          _context.prev = 62;\n          _context.t1 = _context[\"catch\"](56);\n          if (!(_context.t1 instanceof TypeError || _context.t1 instanceof JWEInvalid || _context.t1 instanceof JOSENotSupported)) {\n            _context.next = 66;\n            break;\n          }\n          throw _context.t1;\n        case 66:\n          cek = generateCek(enc);\n        case 67:\n          iv = base64url(jwe.iv);\n          tag = base64url(jwe.tag);\n          protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n          if (jwe.aad !== undefined) {\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n          } else {\n            additionalData = protectedHeader;\n          }\n          _context.next = 73;\n          return decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n        case 73:\n          plaintext = _context.sent;\n          if (!(joseHeader.zip === 'DEF')) {\n            _context.next = 78;\n            break;\n          }\n          _context.next = 77;\n          return ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n        case 77:\n          plaintext = _context.sent;\n        case 78:\n          result = {\n            plaintext: plaintext\n          };\n          if (jwe.protected !== undefined) {\n            result.protectedHeader = parsedProt;\n          }\n          if (jwe.aad !== undefined) {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n          }\n          if (jwe.unprotected !== undefined) {\n            result.sharedUnprotectedHeader = jwe.unprotected;\n          }\n          if (jwe.header !== undefined) {\n            result.unprotectedHeader = jwe.header;\n          }\n          if (!resolvedKey) {\n            _context.next = 85;\n            break;\n          }\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, result), {}, {\n            key: key\n          }));\n        case 85:\n          return _context.abrupt(\"return\", result);\n        case 86:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[21, 26], [56, 62]]);\n  }));\n  return _flattenedDecrypt.apply(this, arguments);\n}","map":{"version":3,"names":["decode","base64url","decrypt","inflate","JOSEAlgNotAllowed","JOSENotSupported","JWEInvalid","isDisjoint","isObject","decryptKeyManagement","encoder","decoder","concat","generateCek","validateCrit","validateAlgorithms","flattenedDecrypt","jwe","key","options","protected","undefined","header","unprotected","iv","ciphertext","tag","encrypted_key","aad","protectedHeader","parsedProt","JSON","parse","joseHeader","Map","crit","zip","alg","enc","keyManagementAlgorithms","contentEncryptionAlgorithms","has","encryptedKey","resolvedKey","cek","TypeError","encode","_a","additionalData","plaintext","inflateRaw","result","additionalAuthenticatedData","sharedUnprotectedHeader","unprotectedHeader"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jwe/flattened/decrypt.js"],"sourcesContent":["import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = base64url(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    const iv = base64url(jwe.iv);\n    const tag = base64url(jwe.tag);\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = base64url(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}