{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n  switch (typeof alg === 'string' && alg.slice(0, 2)) {\n    case 'RS':\n    case 'PS':\n      return 'RSA';\n    case 'ES':\n      return 'EC';\n    case 'Ed':\n      return 'OKP';\n    default:\n      throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n  }\n}\nexport function isJWKSLike(jwks) {\n  return jwks && typeof jwks === 'object' && Array.isArray(jwks.keys) && jwks.keys.every(isJWKLike);\n}\nfunction isJWKLike(key) {\n  return isObject(key);\n}\nfunction clone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\nexport var LocalJWKSet = /*#__PURE__*/function () {\n  function LocalJWKSet(jwks) {\n    _classCallCheck(this, LocalJWKSet);\n    this._cached = new WeakMap();\n    if (!isJWKSLike(jwks)) {\n      throw new JWKSInvalid('JSON Web Key Set malformed');\n    }\n    this._jwks = clone(jwks);\n  }\n  _createClass(LocalJWKSet, [{\n    key: \"getKey\",\n    value: function () {\n      var _getKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(protectedHeader, token) {\n        var _protectedHeader$toke, alg, kid, kty, candidates, jwk, length, cached, keyObject;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _protectedHeader$toke = _objectSpread(_objectSpread({}, protectedHeader), token.header), alg = _protectedHeader$toke.alg, kid = _protectedHeader$toke.kid;\n              kty = getKtyFromAlg(alg);\n              candidates = this._jwks.keys.filter(function (jwk) {\n                var candidate = kty === jwk.kty;\n                if (candidate && typeof kid === 'string') {\n                  candidate = kid === jwk.kid;\n                }\n                if (candidate && typeof jwk.alg === 'string') {\n                  candidate = alg === jwk.alg;\n                }\n                if (candidate && typeof jwk.use === 'string') {\n                  candidate = jwk.use === 'sig';\n                }\n                if (candidate && Array.isArray(jwk.key_ops)) {\n                  candidate = jwk.key_ops.includes('verify');\n                }\n                if (candidate && alg === 'EdDSA') {\n                  candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n                }\n                if (candidate) {\n                  switch (alg) {\n                    case 'ES256':\n                      candidate = jwk.crv === 'P-256';\n                      break;\n                    case 'ES256K':\n                      candidate = jwk.crv === 'secp256k1';\n                      break;\n                    case 'ES384':\n                      candidate = jwk.crv === 'P-384';\n                      break;\n                    case 'ES512':\n                      candidate = jwk.crv === 'P-521';\n                      break;\n                  }\n                }\n                return candidate;\n              });\n              jwk = candidates[0], length = candidates.length;\n              if (!(length === 0)) {\n                _context.next = 8;\n                break;\n              }\n              throw new JWKSNoMatchingKey();\n            case 8:\n              if (!(length !== 1)) {\n                _context.next = 10;\n                break;\n              }\n              throw new JWKSMultipleMatchingKeys();\n            case 10:\n              cached = this._cached.get(jwk) || this._cached.set(jwk, {}).get(jwk);\n              if (!(cached[alg] === undefined)) {\n                _context.next = 18;\n                break;\n              }\n              _context.next = 14;\n              return importJWK(_objectSpread(_objectSpread({}, jwk), {}, {\n                ext: true\n              }), alg);\n            case 14:\n              keyObject = _context.sent;\n              if (!(keyObject instanceof Uint8Array || keyObject.type !== 'public')) {\n                _context.next = 17;\n                break;\n              }\n              throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n            case 17:\n              cached[alg] = keyObject;\n            case 18:\n              return _context.abrupt(\"return\", cached[alg]);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getKey(_x, _x2) {\n        return _getKey.apply(this, arguments);\n      }\n      return getKey;\n    }()\n  }]);\n  return LocalJWKSet;\n}();\nexport function createLocalJWKSet(jwks) {\n  return LocalJWKSet.prototype.getKey.bind(new LocalJWKSet(jwks));\n}","map":{"version":3,"names":["importJWK","JWKSInvalid","JOSENotSupported","JWKSNoMatchingKey","JWKSMultipleMatchingKeys","isObject","getKtyFromAlg","alg","slice","isJWKSLike","jwks","Array","isArray","keys","every","isJWKLike","key","clone","obj","structuredClone","JSON","parse","stringify","LocalJWKSet","_cached","WeakMap","_jwks","protectedHeader","token","header","kid","kty","candidates","filter","jwk","candidate","use","key_ops","includes","crv","length","cached","get","set","undefined","ext","keyObject","Uint8Array","type","createLocalJWKSet","prototype","getKey","bind"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jwks/local.js"],"sourcesContent":["import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            throw new JWKSMultipleMatchingKeys();\n        }\n        const cached = this._cached.get(jwk) || this._cached.set(jwk, {}).get(jwk);\n        if (cached[alg] === undefined) {\n            const keyObject = await importJWK({ ...jwk, ext: true }, alg);\n            if (keyObject instanceof Uint8Array || keyObject.type !== 'public') {\n                throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n            }\n            cached[alg] = keyObject;\n        }\n        return cached[alg];\n    }\n}\nexport function createLocalJWKSet(jwks) {\n    return LocalJWKSet.prototype.getKey.bind(new LocalJWKSet(jwks));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}