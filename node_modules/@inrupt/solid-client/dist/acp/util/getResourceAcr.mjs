import { getAcrUrl } from './getAcrUrl.mjs';
import { getSolidDataset } from '../../resource/solidDataset.mjs';
import { getSourceUrl } from '../../resource/resource.mjs';

//
/**
 * Retrieve the Access Control Resource of a Resource as per the ACP Draft
 * specification.
 *
 * @param resource The Resource for which to retrieve the URL of the Access
 * Control Resource if it is accessible.
 * @param options Default Options such as a fetch function.
 * @returns The URL of the ACR or null.
 */
async function getResourceAcr(resource, options) {
    const acrUrl = await getAcrUrl(resource, options);
    if (acrUrl === null) {
        return null;
    }
    let acr;
    try {
        acr = await getSolidDataset(acrUrl, options);
    }
    catch (e) {
        return null;
    }
    return Object.assign(Object.assign({}, resource), { internal_acp: {
            acr: Object.assign(Object.assign({}, acr), { accessTo: getSourceUrl(resource) }),
        } });
}

export { getResourceAcr };
