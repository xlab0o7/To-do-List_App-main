{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _wrapNativeSuper = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nvar _classCallCheck = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _toConsumableArray = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _require = require('./util'),\n  format = _require.format,\n  inspect = _require.inspect,\n  CustomAggregateError = _require.AggregateError;\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nvar AggregateError = globalThis.AggregateError || CustomAggregateError;\nvar kIsNodeError = Symbol('kIsNodeError');\nvar kTypes = ['string', 'function', 'number', 'object',\n// Accept 'Function' and 'Object' as alternative to the lower cased version.\n'Function', 'Object', 'boolean', 'bigint', 'symbol'];\nvar classRegExp = /^([A-Z][a-z0-9]*)+$/;\nvar nodeInternalPrefix = '__node_internal_';\nvar codes = {};\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  var res = '';\n  var i = val.length;\n  var start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = \"_\".concat(val.slice(i - 3, i)).concat(res);\n  }\n  return \"\".concat(val.slice(0, i)).concat(res);\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(msg.length <= args.length, // Default options do not count.\n    \"Code: \".concat(key, \"; The provided arguments length (\").concat(args.length, \") does not match the required ones (\").concat(msg.length, \").\"));\n    return msg.apply(void 0, _toConsumableArray(args));\n  }\n  var expectedLength = (msg.match(/%[dfijoOs]/g) || []).length;\n  assert(expectedLength === args.length, \"Code: \".concat(key, \"; The provided arguments length (\").concat(args.length, \") does not match the required ones (\").concat(expectedLength, \").\"));\n  if (args.length === 0) {\n    return msg;\n  }\n  return format.apply(void 0, [msg].concat(_toConsumableArray(args)));\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError() {\n      _classCallCheck(this, NodeError);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _super.call(this, getMessage(code, message, args));\n    }\n    _createClass(NodeError, [{\n      key: \"toString\",\n      value: function toString() {\n        return \"\".concat(this.name, \" [\").concat(code, \"]: \").concat(this.message);\n      }\n    }]);\n    return NodeError;\n  }(Base);\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value: function value() {\n        return \"\".concat(this.name, \" [\").concat(code, \"]: \").concat(this.message);\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  });\n  NodeError.prototype.code = code;\n  NodeError.prototype[kIsNodeError] = true;\n  codes[code] = NodeError;\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  var hidden = nodeInternalPrefix + fn.name;\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  });\n  return fn;\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError);\n      return outerError;\n    }\n    var err = new AggregateError([outerError, innerError], outerError.message);\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n}\nvar AbortError = /*#__PURE__*/function (_Error) {\n  _inherits(AbortError, _Error);\n  var _super2 = _createSuper(AbortError);\n  function AbortError() {\n    var _this;\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'The operation was aborted';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    _classCallCheck(this, AbortError);\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    _this = _super2.call(this, message, options);\n    _this.code = 'ABORT_ERR';\n    _this.name = 'AbortError';\n    return _this;\n  }\n  return _createClass(AbortError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nE('ERR_ASSERTION', '%s', Error);\nE('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  assert(typeof name === 'string', \"'name' must be a string\");\n  if (!Array.isArray(expected)) {\n    expected = [expected];\n  }\n  var msg = 'The ';\n  if (name.endsWith(' argument')) {\n    // For cases like 'first argument'\n    msg += \"\".concat(name, \" \");\n  } else {\n    msg += \"\\\"\".concat(name, \"\\\" \").concat(name.includes('.') ? 'property' : 'argument', \" \");\n  }\n  msg += 'must be ';\n  var types = [];\n  var instances = [];\n  var other = [];\n  var _iterator = _createForOfIteratorHelper(expected),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      assert(typeof value === 'string', 'All expected entries have to be of type string');\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase());\n      } else if (classRegExp.test(value)) {\n        instances.push(value);\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"');\n        other.push(value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (instances.length > 0) {\n    var pos = types.indexOf('object');\n    if (pos !== -1) {\n      types.splice(types, pos, 1);\n      instances.push('Object');\n    }\n  }\n  if (types.length > 0) {\n    switch (types.length) {\n      case 1:\n        msg += \"of type \".concat(types[0]);\n        break;\n      case 2:\n        msg += \"one of type \".concat(types[0], \" or \").concat(types[1]);\n        break;\n      default:\n        {\n          var last = types.pop();\n          msg += \"one of type \".concat(types.join(', '), \", or \").concat(last);\n        }\n    }\n    if (instances.length > 0 || other.length > 0) {\n      msg += ' or ';\n    }\n  }\n  if (instances.length > 0) {\n    switch (instances.length) {\n      case 1:\n        msg += \"an instance of \".concat(instances[0]);\n        break;\n      case 2:\n        msg += \"an instance of \".concat(instances[0], \" or \").concat(instances[1]);\n        break;\n      default:\n        {\n          var _last = instances.pop();\n          msg += \"an instance of \".concat(instances.join(', '), \", or \").concat(_last);\n        }\n    }\n    if (other.length > 0) {\n      msg += ' or ';\n    }\n  }\n  switch (other.length) {\n    case 0:\n      break;\n    case 1:\n      if (other[0].toLowerCase() !== other[0]) {\n        msg += 'an ';\n      }\n      msg += \"\".concat(other[0]);\n      break;\n    case 2:\n      msg += \"one of \".concat(other[0], \" or \").concat(other[1]);\n      break;\n    default:\n      {\n        var _last2 = other.pop();\n        msg += \"one of \".concat(other.join(', '), \", or \").concat(_last2);\n      }\n  }\n  if (actual == null) {\n    msg += \". Received \".concat(actual);\n  } else if (typeof actual === 'function' && actual.name) {\n    msg += \". Received function \".concat(actual.name);\n  } else if (typeof actual === 'object') {\n    var _actual$constructor;\n    if ((_actual$constructor = actual.constructor) !== null && _actual$constructor !== undefined && _actual$constructor.name) {\n      msg += \". Received an instance of \".concat(actual.constructor.name);\n    } else {\n      var inspected = inspect(actual, {\n        depth: -1\n      });\n      msg += \". Received \".concat(inspected);\n    }\n  } else {\n    var _inspected = inspect(actual, {\n      colors: false\n    });\n    if (_inspected.length > 25) {\n      _inspected = \"\".concat(_inspected.slice(0, 25), \"...\");\n    }\n    msg += \". Received type \".concat(typeof actual, \" (\").concat(_inspected, \")\");\n  }\n  return msg;\n}, TypeError);\nE('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  var inspected = inspect(value);\n  if (inspected.length > 128) {\n    inspected = inspected.slice(0, 128) + '...';\n  }\n  var type = name.includes('.') ? 'property' : 'argument';\n  return \"The \".concat(type, \" '\").concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError);\nE('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var _value$constructor;\n  var type = value !== null && value !== undefined && (_value$constructor = value.constructor) !== null && _value$constructor !== undefined && _value$constructor.name ? \"instance of \".concat(value.constructor.name) : \"type \".concat(typeof value);\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\nE('ERR_MISSING_ARGS', function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg;\n  var len = args.length;\n  args = (Array.isArray(args) ? args : [args]).map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  }).join(' or ');\n  switch (len) {\n    case 1:\n      msg += \"The \".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"The \".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      {\n        var last = args.pop();\n        msg += \"The \".concat(args.join(', '), \", and \").concat(last, \" arguments\");\n      }\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nE('ERR_OUT_OF_RANGE', function (str, range, input) {\n  assert(range, 'Missing \"range\" argument');\n  var received;\n  if (Number.isInteger(input) && Math.abs(input) > Math.pow(2, 32)) {\n    received = addNumericalSeparator(String(input));\n  } else if (typeof input === 'bigint') {\n    received = String(input);\n    if (input > Math.pow(2n, 32n) || input < -Math.pow(2n, 32n)) {\n      received = addNumericalSeparator(received);\n    }\n    received += 'n';\n  } else {\n    received = inspect(input);\n  }\n  return \"The value of \\\"\".concat(str, \"\\\" is out of range. It must be \").concat(range, \". Received \").concat(received);\n}, RangeError);\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error);\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error);\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error);\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error);\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error);\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error);\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error);\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error);\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError);\nmodule.exports = {\n  AbortError: AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames: hideStackFrames,\n  codes: codes\n};","map":{"version":3,"names":["require","format","inspect","CustomAggregateError","AggregateError","globalThis","kIsNodeError","Symbol","kTypes","classRegExp","nodeInternalPrefix","codes","assert","value","message","ERR_INTERNAL_ASSERTION","addNumericalSeparator","val","res","i","length","start","slice","getMessage","key","msg","args","expectedLength","match","E","code","Base","Error","NodeError","name","Object","defineProperties","prototype","writable","enumerable","configurable","toString","hideStackFrames","fn","hidden","defineProperty","aggregateTwoErrors","innerError","outerError","Array","isArray","errors","push","err","AbortError","options","undefined","ERR_INVALID_ARG_TYPE","expected","actual","endsWith","includes","types","instances","other","toLowerCase","test","pos","indexOf","splice","last","pop","join","_actual$constructor","constructor","inspected","depth","colors","TypeError","reason","type","input","_value$constructor","len","map","a","str","range","received","Number","isInteger","Math","abs","String","RangeError","module","exports"],"sources":["E:/react-todo-app/node_modules/n3/node_modules/readable-stream/lib/ours/errors.js"],"sourcesContent":["'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length,\n      // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n  if (args.length === 0) {\n    return msg\n  }\n  return format(msg, ...args)\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n  return innerError || outerError\n}\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n    let msg = 'The '\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n    switch (other.length) {\n      case 0:\n        break\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n        msg += `${other[0]}`\n        break\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}