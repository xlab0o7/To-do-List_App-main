{"ast":null,"code":"'use strict';\n\n/* replacement start */\nvar process = require('process/');\n\n/* replacement end */\n\nvar _require = require('../../ours/errors'),\n  aggregateTwoErrors = _require.aggregateTwoErrors,\n  ERR_MULTIPLE_CALLBACK = _require.codes.ERR_MULTIPLE_CALLBACK,\n  AbortError = _require.AbortError;\nvar _require2 = require('../../ours/primordials'),\n  Symbol = _require2.Symbol;\nvar _require3 = require('./utils'),\n  kDestroyed = _require3.kDestroyed,\n  isDestroyed = _require3.isDestroyed,\n  isFinished = _require3.isFinished,\n  isServerRequest = _require3.isServerRequest;\nvar kDestroy = Symbol('kDestroy');\nvar kConstruct = Symbol('kConstruct');\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  var r = this._readableState;\n  var w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  var s = w || r;\n  if (w && w.destroyed || r && r.destroyed) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n    return this;\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r);\n  if (w) {\n    w.destroyed = true;\n  }\n  if (r) {\n    r.destroyed = true;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb);\n    });\n  } else {\n    _destroy(this, err, cb);\n  }\n  return this;\n}\nfunction _destroy(self, err, cb) {\n  var called = false;\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n    var r = self._readableState;\n    var w = self._writableState;\n    checkError(err, w, r);\n    if (w) {\n      w.closed = true;\n    }\n    if (r) {\n      r.closed = true;\n    }\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err);\n    } else {\n      process.nextTick(emitCloseNT, self);\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy);\n  } catch (err) {\n    onDestroy(err);\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  var r = self._readableState;\n  var w = self._writableState;\n  if (w) {\n    w.closeEmitted = true;\n  }\n  if (r) {\n    r.closeEmitted = true;\n  }\n  if (w && w.emitClose || r && r.emitClose) {\n    self.emit('close');\n  }\n}\nfunction emitErrorNT(self, err) {\n  var r = self._readableState;\n  var w = self._writableState;\n  if (w && w.errorEmitted || r && r.errorEmitted) {\n    return;\n  }\n  if (w) {\n    w.errorEmitted = true;\n  }\n  if (r) {\n    r.errorEmitted = true;\n  }\n  self.emit('error', err);\n}\nfunction undestroy() {\n  var r = this._readableState;\n  var w = this._writableState;\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = r.readable === false;\n    r.endEmitted = r.readable === false;\n  }\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.ended = w.writable === false;\n    w.ending = w.writable === false;\n    w.finished = w.writable === false;\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var r = stream._readableState;\n  var w = stream._writableState;\n  if (w && w.destroyed || r && r.destroyed) {\n    return this;\n  }\n  if (r && r.autoDestroy || w && w.autoDestroy) stream.destroy(err);else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err);\n    } else {\n      emitErrorNT(stream, err);\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n  var r = stream._readableState;\n  var w = stream._writableState;\n  if (r) {\n    r.constructed = false;\n  }\n  if (w) {\n    w.constructed = false;\n  }\n  stream.once(kConstruct, cb);\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n  process.nextTick(constructNT, stream);\n}\nfunction constructNT(stream) {\n  var called = false;\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n    var r = stream._readableState;\n    var w = stream._writableState;\n    var s = w || r;\n    if (r) {\n      r.constructed = true;\n    }\n    if (w) {\n      w.constructed = true;\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err);\n    } else if (err) {\n      errorOrDestroy(stream, err, true);\n    } else {\n      process.nextTick(emitConstructNT, stream);\n    }\n  }\n  try {\n    stream._construct(onConstruct);\n  } catch (err) {\n    onConstruct(err);\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct);\n}\nfunction isRequest(stream) {\n  return stream && stream.setHeader && typeof stream.abort === 'function';\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close');\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err);\n  process.nextTick(emitCloseLegacy, stream);\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return;\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError();\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null;\n    stream.destroy(err);\n  } else if (isRequest(stream)) {\n    stream.abort();\n  } else if (isRequest(stream.req)) {\n    stream.req.abort();\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err);\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close();\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err);\n  } else {\n    process.nextTick(emitCloseLegacy, stream);\n  }\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true;\n  }\n}\nmodule.exports = {\n  construct: construct,\n  destroyer: destroyer,\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","map":{"version":3,"names":["process","require","aggregateTwoErrors","ERR_MULTIPLE_CALLBACK","codes","AbortError","Symbol","kDestroyed","isDestroyed","isFinished","isServerRequest","kDestroy","kConstruct","checkError","err","w","r","stack","errored","destroy","cb","_readableState","_writableState","s","destroyed","constructed","once","er","_destroy","self","called","onDestroy","closed","nextTick","emitErrorCloseNT","emitCloseNT","emitErrorNT","closeEmitted","emitClose","emit","errorEmitted","undestroy","reading","ended","readable","endEmitted","finalCalled","prefinished","writable","ending","finished","errorOrDestroy","stream","sync","autoDestroy","construct","_construct","listenerCount","constructNT","onConstruct","undefined","emitConstructNT","isRequest","setHeader","abort","emitCloseLegacy","emitErrorCloseLegacy","destroyer","socket","req","close","module","exports"],"sources":["E:/react-todo-app/node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js"],"sourcesContent":["'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\nconst { Symbol } = require('../../ours/primordials')\nconst { kDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState\n  // With duplex streams we use the writable side for state.\n  const s = w || r\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n    return this\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r)\n  if (w) {\n    w.destroyed = true\n  }\n  if (r) {\n    r.destroyed = true\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n  return this\n}\nfunction _destroy(self, err, cb) {\n  let called = false\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n    if (w) {\n      w.closed = true\n    }\n    if (r) {\n      r.closed = true\n    }\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n  if (w) {\n    w.closeEmitted = true\n  }\n  if (r) {\n    r.closeEmitted = true\n  }\n  if ((w && w.emitClose) || (r && r.emitClose)) {\n    self.emit('close')\n  }\n}\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\n    return\n  }\n  if (w) {\n    w.errorEmitted = true\n  }\n  if (r) {\n    r.errorEmitted = true\n  }\n  self.emit('error', err)\n}\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState\n  const w = stream._writableState\n  if ((w && w.destroyed) || (r && r.destroyed)) {\n    return this\n  }\n  if ((r && r.autoDestroy) || (w && w.autoDestroy)) stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n  const r = stream._readableState\n  const w = stream._writableState\n  if (r) {\n    r.constructed = false\n  }\n  if (w) {\n    w.constructed = false\n  }\n  stream.once(kConstruct, cb)\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n  process.nextTick(constructNT, stream)\n}\nfunction constructNT(stream) {\n  let called = false\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n    if (r) {\n      r.constructed = true\n    }\n    if (w) {\n      w.constructed = true\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n  try {\n    stream._construct(onConstruct)\n  } catch (err) {\n    onConstruct(err)\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\nfunction isRequest(stream) {\n  return stream && stream.setHeader && typeof stream.abort === 'function'\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true\n  }\n}\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}