{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FallbackRedirectHandler = void 0;\nvar SessionInfoManager_1 = require(\"../../../sessionInfo/SessionInfoManager\");\nvar FallbackRedirectHandler = /*#__PURE__*/function () {\n  function FallbackRedirectHandler() {\n    _classCallCheck(this, FallbackRedirectHandler);\n  }\n  _createClass(FallbackRedirectHandler, [{\n    key: \"canHandle\",\n    value: function () {\n      var _canHandle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(redirectUrl) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              new URL(redirectUrl);\n              return _context.abrupt(\"return\", true);\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              throw new Error(\"[\".concat(redirectUrl, \"] is not a valid URL, and cannot be used as a redirect URL: \").concat(_context.t0));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n      function canHandle(_x) {\n        return _canHandle.apply(this, arguments);\n      }\n      return canHandle;\n    }()\n  }, {\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_redirectUrl) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", (0, SessionInfoManager_1.getUnauthenticatedSession)());\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function handle(_x2) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }]);\n  return FallbackRedirectHandler;\n}();\nexports.FallbackRedirectHandler = FallbackRedirectHandler;","map":{"version":3,"mappings":";;;;;;;;;;AA+BA;AAAoF,IAQvEA,uBAAuB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA,4EAClC,iBAAgBC,WAAmB;QAAA;UAAA;YAAA;cAAA;cAI/B,IAAIC,GAAG,CAACD,WAAW,CAAC;cAAC,iCACd,IAAI;YAAA;cAAA;cAAA;cAAA,MAEL,IAAIE,KAAK,YACTF,WAAW,sFAChB;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAEJ;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,yEAED,kBAEEG,YAAoB;QAAA;UAAA;YAAA;cAAA,kCAEb,kDAAyB,GAAE;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACnC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AAnBHC","names":["FallbackRedirectHandler","redirectUrl","URL","Error","_redirectUrl","exports"],"sources":["E:\\react-todo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\login\\oidc\\incomingRedirectHandler\\FallbackRedirectHandler.ts"],"sourcesContent":["//\n// Copyright 2022 Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  IIncomingRedirectHandler,\n  ISessionInfo,\n} from \"@inrupt/solid-client-authn-core\";\n\nimport { getUnauthenticatedSession } from \"../../../sessionInfo/SessionInfoManager\";\n\n/**\n * This class handles redirect IRIs without any query params, and returns an unauthenticated\n * session. It serves as a fallback so that consuming libraries don't have to test\n * for the query params themselves, and can always try to use them as a redirect IRI.\n * @hidden\n */\nexport class FallbackRedirectHandler implements IIncomingRedirectHandler {\n  async canHandle(redirectUrl: string): Promise<boolean> {\n    try {\n      // The next URL object is built for validating it.\n      // eslint-disable-next-line no-new\n      new URL(redirectUrl);\n      return true;\n    } catch (e) {\n      throw new Error(\n        `[${redirectUrl}] is not a valid URL, and cannot be used as a redirect URL: ${e}`\n      );\n    }\n  }\n\n  async handle(\n    // The argument is ignored, but must be present to implement the interface\n    _redirectUrl: string\n  ): Promise<ISessionInfo & { fetch: typeof fetch }> {\n    return getUnauthenticatedSession();\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}