{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar GeneralLogoutHandler = /*#__PURE__*/function () {\n  function GeneralLogoutHandler(sessionInfoManager) {\n    _classCallCheck(this, GeneralLogoutHandler);\n    this.sessionInfoManager = sessionInfoManager;\n  }\n  _createClass(GeneralLogoutHandler, [{\n    key: \"canHandle\",\n    value: function () {\n      var _canHandle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", true);\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function canHandle() {\n        return _canHandle.apply(this, arguments);\n      }\n      return canHandle;\n    }()\n  }, {\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(userId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.sessionInfoManager.clear(userId);\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function handle(_x) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }]);\n  return GeneralLogoutHandler;\n}();\nexports.default = GeneralLogoutHandler;","map":{"version":3,"mappings":";;;;;;;;;IAkCqBA,oBAAoB;EACvC,8BAAoBC,kBAAuC;IAAA;IAAvC,uBAAkB,GAAlBA,kBAAkB;EAAwB;EAAC;IAAA;IAAA;MAAA,4EAE/D;QAAA;UAAA;YAAA;cAAA,iCACS,IAAI;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACZ;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,yEAED,kBAAaC,MAAc;QAAA;UAAA;YAAA;cAAA;cAAA,OACnB,IAAI,CAACD,kBAAkB,CAACE,KAAK,CAACD,MAAM,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAC5C;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AATHE","names":["GeneralLogoutHandler","sessionInfoManager","userId","clear","exports"],"sources":["E:\\react-todo-app\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\logout\\GeneralLogoutHandler.ts"],"sourcesContent":["//\n// Copyright 2022 Inrupt Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n// Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\nimport {\n  ILogoutHandler,\n  ISessionInfoManager,\n} from \"@inrupt/solid-client-authn-core\";\n\n/**\n * @hidden\n */\nexport default class GeneralLogoutHandler implements ILogoutHandler {\n  constructor(private sessionInfoManager: ISessionInfoManager) {}\n\n  async canHandle(): Promise<boolean> {\n    return true;\n  }\n\n  async handle(userId: string): Promise<void> {\n    await this.sessionInfoManager.clear(userId);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}