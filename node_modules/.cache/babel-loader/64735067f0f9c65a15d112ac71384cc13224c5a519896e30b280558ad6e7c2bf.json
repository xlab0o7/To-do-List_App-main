{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nfunction cbcEncrypt(_x, _x2, _x3, _x4, _x5) {\n  return _cbcEncrypt.apply(this, arguments);\n}\nfunction _cbcEncrypt() {\n  _cbcEncrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(enc, plaintext, cek, iv, aad) {\n    var keySize, encKey, macKey, ciphertext, macData, tag;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (cek instanceof Uint8Array) {\n            _context2.next = 2;\n            break;\n          }\n          throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n        case 2:\n          keySize = parseInt(enc.slice(1, 4), 10);\n          _context2.next = 5;\n          return crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n        case 5:\n          encKey = _context2.sent;\n          _context2.next = 8;\n          return crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n            hash: \"SHA-\".concat(keySize << 1),\n            name: 'HMAC'\n          }, false, ['sign']);\n        case 8:\n          macKey = _context2.sent;\n          _context2.t0 = Uint8Array;\n          _context2.next = 12;\n          return crypto.subtle.encrypt({\n            iv: iv,\n            name: 'AES-CBC'\n          }, encKey, plaintext);\n        case 12:\n          _context2.t1 = _context2.sent;\n          ciphertext = new _context2.t0(_context2.t1);\n          macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n          _context2.t2 = Uint8Array;\n          _context2.next = 18;\n          return crypto.subtle.sign('HMAC', macKey, macData);\n        case 18:\n          _context2.t3 = _context2.sent.slice(0, keySize >> 3);\n          tag = new _context2.t2(_context2.t3);\n          return _context2.abrupt(\"return\", {\n            ciphertext: ciphertext,\n            tag: tag\n          });\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _cbcEncrypt.apply(this, arguments);\n}\nfunction gcmEncrypt(_x6, _x7, _x8, _x9, _x10) {\n  return _gcmEncrypt.apply(this, arguments);\n}\nfunction _gcmEncrypt() {\n  _gcmEncrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(enc, plaintext, cek, iv, aad) {\n    var encKey, encrypted, tag, ciphertext;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(cek instanceof Uint8Array)) {\n            _context3.next = 6;\n            break;\n          }\n          _context3.next = 3;\n          return crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n        case 3:\n          encKey = _context3.sent;\n          _context3.next = 8;\n          break;\n        case 6:\n          checkEncCryptoKey(cek, enc, 'encrypt');\n          encKey = cek;\n        case 8:\n          _context3.t0 = Uint8Array;\n          _context3.next = 11;\n          return crypto.subtle.encrypt({\n            additionalData: aad,\n            iv: iv,\n            name: 'AES-GCM',\n            tagLength: 128\n          }, encKey, plaintext);\n        case 11:\n          _context3.t1 = _context3.sent;\n          encrypted = new _context3.t0(_context3.t1);\n          tag = encrypted.slice(-16);\n          ciphertext = encrypted.slice(0, -16);\n          return _context3.abrupt(\"return\", {\n            ciphertext: ciphertext,\n            tag: tag\n          });\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _gcmEncrypt.apply(this, arguments);\n}\nvar encrypt = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(enc, plaintext, cek, iv, aad) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!isCryptoKey(cek) && !(cek instanceof Uint8Array))) {\n            _context.next = 2;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [cek].concat(_toConsumableArray(types), ['Uint8Array'])));\n        case 2:\n          checkIvLength(enc, iv);\n          _context.t0 = enc;\n          _context.next = _context.t0 === 'A128CBC-HS256' ? 6 : _context.t0 === 'A192CBC-HS384' ? 6 : _context.t0 === 'A256CBC-HS512' ? 6 : _context.t0 === 'A128GCM' ? 8 : _context.t0 === 'A192GCM' ? 8 : _context.t0 === 'A256GCM' ? 8 : 10;\n          break;\n        case 6:\n          if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(-3), 10));\n          return _context.abrupt(\"return\", cbcEncrypt(enc, plaintext, cek, iv, aad));\n        case 8:\n          if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n          return _context.abrupt(\"return\", gcmEncrypt(enc, plaintext, cek, iv, aad));\n        case 10:\n          throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function encrypt(_x11, _x12, _x13, _x14, _x15) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default encrypt;","map":{"version":3,"names":["concat","uint64be","checkIvLength","checkCekLength","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","JOSENotSupported","types","cbcEncrypt","enc","plaintext","cek","iv","aad","Uint8Array","TypeError","keySize","parseInt","slice","subtle","importKey","subarray","encKey","hash","name","macKey","encrypt","ciphertext","macData","length","sign","tag","gcmEncrypt","additionalData","tagLength","encrypted"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/runtime/encrypt.js"],"sourcesContent":["import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}