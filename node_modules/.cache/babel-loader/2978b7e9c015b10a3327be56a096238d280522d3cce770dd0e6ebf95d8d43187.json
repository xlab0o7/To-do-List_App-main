{"ast":null,"code":"'use strict';\n\nvar _require = require('../ours/primordials'),\n  ArrayPrototypePop = _require.ArrayPrototypePop,\n  Promise = _require.Promise;\nvar _require2 = require('../internal/streams/utils'),\n  isIterable = _require2.isIterable,\n  isNodeStream = _require2.isNodeStream;\nvar _require3 = require('../internal/streams/pipeline'),\n  pl = _require3.pipelineImpl;\nvar _require4 = require('../internal/streams/end-of-stream'),\n  finished = _require4.finished;\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  return new Promise(function (resolve, reject) {\n    var signal;\n    var end;\n    var lastArg = streams[streams.length - 1];\n    if (lastArg && typeof lastArg === 'object' && !isNodeStream(lastArg) && !isIterable(lastArg)) {\n      var options = ArrayPrototypePop(streams);\n      signal = options.signal;\n      end = options.end;\n    }\n    pl(streams, function (err, value) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(value);\n      }\n    }, {\n      signal: signal,\n      end: end\n    });\n  });\n}\nmodule.exports = {\n  finished: finished,\n  pipeline: pipeline\n};","map":{"version":3,"names":["require","ArrayPrototypePop","Promise","isIterable","isNodeStream","pl","pipelineImpl","finished","pipeline","streams","resolve","reject","signal","end","lastArg","length","options","err","value","module","exports"],"sources":["E:/react-todo-app/node_modules/n3/node_modules/readable-stream/lib/stream/promises.js"],"sourcesContent":["'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (lastArg && typeof lastArg === 'object' && !isNodeStream(lastArg) && !isIterable(lastArg)) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,eAAuCA,OAAO,CAAC,qBAAqB,CAAC;EAA7DC,iBAAiB,YAAjBA,iBAAiB;EAAEC,OAAO,YAAPA,OAAO;AAClC,gBAAqCF,OAAO,CAAC,2BAA2B,CAAC;EAAjEG,UAAU,aAAVA,UAAU;EAAEC,YAAY,aAAZA,YAAY;AAChC,gBAA6BJ,OAAO,CAAC,8BAA8B,CAAC;EAA9CK,EAAE,aAAhBC,YAAY;AACpB,gBAAqBN,OAAO,CAAC,mCAAmC,CAAC;EAAzDO,QAAQ,aAARA,QAAQ;AAChB,SAASC,QAAQ,GAAa;EAAA,kCAATC,OAAO;IAAPA,OAAO;EAAA;EAC1B,OAAO,IAAIP,OAAO,CAAC,UAACQ,OAAO,EAAEC,MAAM,EAAK;IACtC,IAAIC,MAAM;IACV,IAAIC,GAAG;IACP,IAAMC,OAAO,GAAGL,OAAO,CAACA,OAAO,CAACM,MAAM,GAAG,CAAC,CAAC;IAC3C,IAAID,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAI,CAACV,YAAY,CAACU,OAAO,CAAC,IAAI,CAACX,UAAU,CAACW,OAAO,CAAC,EAAE;MAC5F,IAAME,OAAO,GAAGf,iBAAiB,CAACQ,OAAO,CAAC;MAC1CG,MAAM,GAAGI,OAAO,CAACJ,MAAM;MACvBC,GAAG,GAAGG,OAAO,CAACH,GAAG;IACnB;IACAR,EAAE,CACAI,OAAO,EACP,UAACQ,GAAG,EAAEC,KAAK,EAAK;MACd,IAAID,GAAG,EAAE;QACPN,MAAM,CAACM,GAAG,CAAC;MACb,CAAC,MAAM;QACLP,OAAO,CAACQ,KAAK,CAAC;MAChB;IACF,CAAC,EACD;MACEN,MAAM,EAANA,MAAM;MACNC,GAAG,EAAHA;IACF,CAAC,CACF;EACH,CAAC,CAAC;AACJ;AACAM,MAAM,CAACC,OAAO,GAAG;EACfb,QAAQ,EAARA,QAAQ;EACRC,QAAQ,EAARA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}