{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport function jwtVerify(_x, _x2, _x3) {\n  return _jwtVerify.apply(this, arguments);\n}\nfunction _jwtVerify() {\n  _jwtVerify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwt, key, options) {\n    var _a, verified, payload, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return compactVerify(jwt, key, options);\n        case 2:\n          verified = _context.sent;\n          if (!(((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false)) {\n            _context.next = 5;\n            break;\n          }\n          throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        case 5:\n          payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n          result = {\n            payload: payload,\n            protectedHeader: verified.protectedHeader\n          };\n          if (!(typeof key === 'function')) {\n            _context.next = 9;\n            break;\n          }\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, result), {}, {\n            key: verified.key\n          }));\n        case 9:\n          return _context.abrupt(\"return\", result);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _jwtVerify.apply(this, arguments);\n}","map":{"version":3,"names":["compactVerify","jwtPayload","JWTInvalid","jwtVerify","jwt","key","options","verified","_a","protectedHeader","crit","includes","b64","payload","result"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jwt/verify.js"],"sourcesContent":["import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,gBAAsBC,SAAS;EAAA;AAAA;AAY9B;EAAA,wEAZM,iBAAyBC,GAAG,EAAEC,GAAG,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAEtBN,aAAa,CAACI,GAAG,EAAEC,GAAG,EAAEC,OAAO,CAAC;QAAA;UAAjDC,QAAQ;UAAA,MACV,CAAC,CAACC,EAAE,GAAGD,QAAQ,CAACE,eAAe,CAACC,IAAI,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,QAAQ,CAAC,KAAK,CAAC,KAAKJ,QAAQ,CAACE,eAAe,CAACG,GAAG,KAAK,KAAK;YAAA;YAAA;UAAA;UAAA,MAClI,IAAIV,UAAU,CAAC,qCAAqC,CAAC;QAAA;UAEzDW,OAAO,GAAGZ,UAAU,CAACM,QAAQ,CAACE,eAAe,EAAEF,QAAQ,CAACM,OAAO,EAAEP,OAAO,CAAC;UACzEQ,MAAM,GAAG;YAAED,OAAO,EAAPA,OAAO;YAAEJ,eAAe,EAAEF,QAAQ,CAACE;UAAgB,CAAC;UAAA,MACjE,OAAOJ,GAAG,KAAK,UAAU;YAAA;YAAA;UAAA;UAAA,iEACbS,MAAM;YAAET,GAAG,EAAEE,QAAQ,CAACF;UAAG;QAAA;UAAA,iCAElCS,MAAM;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAChB;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}