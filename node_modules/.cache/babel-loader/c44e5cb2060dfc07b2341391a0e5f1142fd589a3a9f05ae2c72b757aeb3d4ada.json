{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n  if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n    throw new TypeError(\"Invalid key size for alg: \".concat(alg));\n  }\n}\nfunction getCryptoKey(key, alg, usage) {\n  if (isCryptoKey(key)) {\n    checkEncCryptoKey(key, alg, usage);\n    return key;\n  }\n  if (key instanceof Uint8Array) {\n    return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n  }\n  throw new TypeError(invalidKeyInput.apply(void 0, [key].concat(_toConsumableArray(types), ['Uint8Array'])));\n}\nexport var wrap = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(alg, key, cek) {\n    var _crypto$subtle;\n    var cryptoKey, cryptoKeyCek;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getCryptoKey(key, alg, 'wrapKey');\n        case 2:\n          cryptoKey = _context.sent;\n          checkKeySize(cryptoKey, alg);\n          _context.next = 6;\n          return (_crypto$subtle = crypto.subtle).importKey.apply(_crypto$subtle, ['raw', cek].concat(_toConsumableArray(bogusWebCrypto)));\n        case 6:\n          cryptoKeyCek = _context.sent;\n          _context.t0 = Uint8Array;\n          _context.next = 10;\n          return crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW');\n        case 10:\n          _context.t1 = _context.sent;\n          return _context.abrupt(\"return\", new _context.t0(_context.t1));\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function wrap(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var unwrap = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(alg, key, encryptedKey) {\n    var _crypto$subtle2;\n    var cryptoKey, cryptoKeyCek;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return getCryptoKey(key, alg, 'unwrapKey');\n        case 2:\n          cryptoKey = _context2.sent;\n          checkKeySize(cryptoKey, alg);\n          _context2.next = 6;\n          return (_crypto$subtle2 = crypto.subtle).unwrapKey.apply(_crypto$subtle2, ['raw', encryptedKey, cryptoKey, 'AES-KW'].concat(_toConsumableArray(bogusWebCrypto)));\n        case 6:\n          cryptoKeyCek = _context2.sent;\n          _context2.t0 = Uint8Array;\n          _context2.next = 10;\n          return crypto.subtle.exportKey('raw', cryptoKeyCek);\n        case 10:\n          _context2.t1 = _context2.sent;\n          return _context2.abrupt(\"return\", new _context2.t0(_context2.t1));\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function unwrap(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["bogusWebCrypto","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","checkKeySize","key","alg","algorithm","length","parseInt","slice","TypeError","getCryptoKey","usage","Uint8Array","subtle","importKey","wrap","cek","cryptoKey","cryptoKeyCek","wrapKey","unwrap","encryptedKey","unwrapKey","exportKey"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/runtime/aeskw.js"],"sourcesContent":["import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n"],"mappings":";;;AAAA,OAAOA,cAAc,MAAM,YAAY;AACvC,OAAOC,MAAM,IAAIC,WAAW,QAAQ,gBAAgB;AACpD,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,YAAY,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC5B,IAAID,GAAG,CAACE,SAAS,CAACC,MAAM,KAAKC,QAAQ,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IACxD,MAAM,IAAIC,SAAS,qCAA8BL,GAAG,EAAG;EAC3D;AACJ;AACA,SAASM,YAAY,CAACP,GAAG,EAAEC,GAAG,EAAEO,KAAK,EAAE;EACnC,IAAIb,WAAW,CAACK,GAAG,CAAC,EAAE;IAClBJ,iBAAiB,CAACI,GAAG,EAAEC,GAAG,EAAEO,KAAK,CAAC;IAClC,OAAOR,GAAG;EACd;EACA,IAAIA,GAAG,YAAYS,UAAU,EAAE;IAC3B,OAAOf,MAAM,CAACgB,MAAM,CAACC,SAAS,CAAC,KAAK,EAAEX,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAACQ,KAAK,CAAC,CAAC;EACvE;EACA,MAAM,IAAIF,SAAS,CAACT,eAAe,gBAACG,GAAG,4BAAKF,KAAK,IAAE,YAAY,GAAC,CAAC;AACrE;AACA,OAAO,IAAMc,IAAI;EAAA,sEAAG,iBAAOX,GAAG,EAAED,GAAG,EAAEa,GAAG;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OACZN,YAAY,CAACP,GAAG,EAAEC,GAAG,EAAE,SAAS,CAAC;QAAA;UAAnDa,SAAS;UACff,YAAY,CAACe,SAAS,EAAEb,GAAG,CAAC;UAAC;UAAA,OACF,kBAAAP,MAAM,CAACgB,MAAM,EAACC,SAAS,wBAAC,KAAK,EAAEE,GAAG,4BAAKpB,cAAc,GAAC;QAAA;UAA3EsB,YAAY;UAAA,cACPN,UAAU;UAAA;UAAA,OAAOf,MAAM,CAACgB,MAAM,CAACM,OAAO,CAAC,KAAK,EAAED,YAAY,EAAED,SAAS,EAAE,QAAQ,CAAC;QAAA;UAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC9F;EAAA,gBALYF,IAAI;IAAA;EAAA;AAAA,GAKhB;AACD,OAAO,IAAMK,MAAM;EAAA,uEAAG,kBAAOhB,GAAG,EAAED,GAAG,EAAEkB,YAAY;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OACvBX,YAAY,CAACP,GAAG,EAAEC,GAAG,EAAE,WAAW,CAAC;QAAA;UAArDa,SAAS;UACff,YAAY,CAACe,SAAS,EAAEb,GAAG,CAAC;UAAC;UAAA,OACF,mBAAAP,MAAM,CAACgB,MAAM,EAACS,SAAS,yBAAC,KAAK,EAAED,YAAY,EAAEJ,SAAS,EAAE,QAAQ,4BAAKrB,cAAc,GAAC;QAAA;UAAzGsB,YAAY;UAAA,eACPN,UAAU;UAAA;UAAA,OAAOf,MAAM,CAACgB,MAAM,CAACU,SAAS,CAAC,KAAK,EAAEL,YAAY,CAAC;QAAA;UAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC3E;EAAA,gBALYE,MAAM;IAAA;EAAA;AAAA,GAKlB"},"metadata":{},"sourceType":"module","externalDependencies":[]}