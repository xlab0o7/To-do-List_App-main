{"ast":null,"code":"/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nvar _toConsumableArray = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   * @param existing an existing Map to use.\n   * @param counter the counter to use.\n   */\n  function IdentifierIssuer(prefix) {\n    var existing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n    var counter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    _classCallCheck(this, IdentifierIssuer);\n    this.prefix = prefix;\n    this._existing = existing;\n    this.counter = counter;\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  _createClass(IdentifierIssuer, [{\n    key: \"clone\",\n    value: function clone() {\n      var prefix = this.prefix,\n        _existing = this._existing,\n        counter = this.counter;\n      return new IdentifierIssuer(prefix, new Map(_existing), counter);\n    }\n\n    /**\n     * Gets the new identifier for the given old identifier, where if no old\n     * identifier is given a new identifier will be generated.\n     *\n     * @param [old] the old identifier to get the new identifier for.\n     *\n     * @return the new identifier.\n     */\n  }, {\n    key: \"getId\",\n    value: function getId(old) {\n      // return existing old identifier\n      var existing = old && this._existing.get(old);\n      if (existing) {\n        return existing;\n      }\n\n      // get next identifier\n      var identifier = this.prefix + this.counter;\n      this.counter++;\n\n      // save mapping\n      if (old) {\n        this._existing.set(old, identifier);\n      }\n      return identifier;\n    }\n\n    /**\n     * Returns true if the given old identifer has already been assigned a new\n     * identifier.\n     *\n     * @param old the old identifier to check.\n     *\n     * @return true if the old identifier has been assigned a new identifier,\n     *   false if not.\n     */\n  }, {\n    key: \"hasId\",\n    value: function hasId(old) {\n      return this._existing.has(old);\n    }\n\n    /**\n     * Returns all of the IDs that have been issued new IDs in the order in\n     * which they were issued new IDs.\n     *\n     * @return the list of old IDs that has been issued new IDs in order.\n     */\n  }, {\n    key: \"getOldIds\",\n    value: function getOldIds() {\n      return _toConsumableArray(this._existing.keys());\n    }\n  }]);\n  return IdentifierIssuer;\n}();","map":{"version":3,"names":["module","exports","prefix","existing","Map","counter","_existing","IdentifierIssuer","old","get","identifier","set","has","keys"],"sources":["E:/react-todo-app/node_modules/rdf-canonize/lib/IdentifierIssuer.js"],"sourcesContent":["/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class IdentifierIssuer {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   * @param existing an existing Map to use.\n   * @param counter the counter to use.\n   */\n  constructor(prefix, existing = new Map(), counter = 0) {\n    this.prefix = prefix;\n    this._existing = existing;\n    this.counter = counter;\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  clone() {\n    const {prefix, _existing, counter} = this;\n    return new IdentifierIssuer(prefix, new Map(_existing), counter);\n  }\n\n  /**\n   * Gets the new identifier for the given old identifier, where if no old\n   * identifier is given a new identifier will be generated.\n   *\n   * @param [old] the old identifier to get the new identifier for.\n   *\n   * @return the new identifier.\n   */\n  getId(old) {\n    // return existing old identifier\n    const existing = old && this._existing.get(old);\n    if(existing) {\n      return existing;\n    }\n\n    // get next identifier\n    const identifier = this.prefix + this.counter;\n    this.counter++;\n\n    // save mapping\n    if(old) {\n      this._existing.set(old, identifier);\n    }\n\n    return identifier;\n  }\n\n  /**\n   * Returns true if the given old identifer has already been assigned a new\n   * identifier.\n   *\n   * @param old the old identifier to check.\n   *\n   * @return true if the old identifier has been assigned a new identifier,\n   *   false if not.\n   */\n  hasId(old) {\n    return this._existing.has(old);\n  }\n\n  /**\n   * Returns all of the IDs that have been issued new IDs in the order in\n   * which they were issued new IDs.\n   *\n   * @return the list of old IDs that has been issued new IDs in order.\n   */\n  getOldIds() {\n    return [...this._existing.keys()];\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAEbA,MAAM,CAACC,OAAO;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,0BAAYC,MAAM,EAAqC;IAAA,IAAnCC,QAAQ,uEAAG,IAAIC,GAAG,EAAE;IAAA,IAAEC,OAAO,uEAAG,CAAC;IAAA;IACnD,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACI,SAAS,GAAGH,QAAQ;IACzB,IAAI,CAACE,OAAO,GAAGA,OAAO;EACxB;;EAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,iBAAQ;MACN,IAAOH,MAAM,GAAwB,IAAI,CAAlCA,MAAM;QAAEI,SAAS,GAAa,IAAI,CAA1BA,SAAS;QAAED,OAAO,GAAI,IAAI,CAAfA,OAAO;MACjC,OAAO,IAAIE,gBAAgB,CAACL,MAAM,EAAE,IAAIE,GAAG,CAACE,SAAS,CAAC,EAAED,OAAO,CAAC;IAClE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA,OAQA,eAAMG,GAAG,EAAE;MACT;MACA,IAAML,QAAQ,GAAGK,GAAG,IAAI,IAAI,CAACF,SAAS,CAACG,GAAG,CAACD,GAAG,CAAC;MAC/C,IAAGL,QAAQ,EAAE;QACX,OAAOA,QAAQ;MACjB;;MAEA;MACA,IAAMO,UAAU,GAAG,IAAI,CAACR,MAAM,GAAG,IAAI,CAACG,OAAO;MAC7C,IAAI,CAACA,OAAO,EAAE;;MAEd;MACA,IAAGG,GAAG,EAAE;QACN,IAAI,CAACF,SAAS,CAACK,GAAG,CAACH,GAAG,EAAEE,UAAU,CAAC;MACrC;MAEA,OAAOA,UAAU;IACnB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA;IAAA,OASA,eAAMF,GAAG,EAAE;MACT,OAAO,IAAI,CAACF,SAAS,CAACM,GAAG,CAACJ,GAAG,CAAC;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,qBAAY;MACV,0BAAW,IAAI,CAACF,SAAS,CAACO,IAAI,EAAE;IAClC;EAAC;EAAA;AAAA,GACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}