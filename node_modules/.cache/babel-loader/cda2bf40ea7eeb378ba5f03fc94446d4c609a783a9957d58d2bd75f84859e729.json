{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport var encrypt = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(alg, key, cek) {\n    var _crypto$subtle, cryptoKeyCek;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (isCryptoKey(key)) {\n            _context.next = 2;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [key].concat(_toConsumableArray(types))));\n        case 2:\n          checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n          checkKeyLength(alg, key);\n          if (!key.usages.includes('encrypt')) {\n            _context.next = 10;\n            break;\n          }\n          _context.t0 = Uint8Array;\n          _context.next = 8;\n          return crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek);\n        case 8:\n          _context.t1 = _context.sent;\n          return _context.abrupt(\"return\", new _context.t0(_context.t1));\n        case 10:\n          if (!key.usages.includes('wrapKey')) {\n            _context.next = 19;\n            break;\n          }\n          _context.next = 13;\n          return (_crypto$subtle = crypto.subtle).importKey.apply(_crypto$subtle, ['raw', cek].concat(_toConsumableArray(bogusWebCrypto)));\n        case 13:\n          cryptoKeyCek = _context.sent;\n          _context.t2 = Uint8Array;\n          _context.next = 17;\n          return crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg));\n        case 17:\n          _context.t3 = _context.sent;\n          return _context.abrupt(\"return\", new _context.t2(_context.t3));\n        case 19:\n          throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function encrypt(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var decrypt = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(alg, key, encryptedKey) {\n    var _crypto$subtle2, cryptoKeyCek;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (isCryptoKey(key)) {\n            _context2.next = 2;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [key].concat(_toConsumableArray(types))));\n        case 2:\n          checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n          checkKeyLength(alg, key);\n          if (!key.usages.includes('decrypt')) {\n            _context2.next = 10;\n            break;\n          }\n          _context2.t0 = Uint8Array;\n          _context2.next = 8;\n          return crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey);\n        case 8:\n          _context2.t1 = _context2.sent;\n          return _context2.abrupt(\"return\", new _context2.t0(_context2.t1));\n        case 10:\n          if (!key.usages.includes('unwrapKey')) {\n            _context2.next = 19;\n            break;\n          }\n          _context2.next = 13;\n          return (_crypto$subtle2 = crypto.subtle).unwrapKey.apply(_crypto$subtle2, ['raw', encryptedKey, key, subtleAlgorithm(alg)].concat(_toConsumableArray(bogusWebCrypto)));\n        case 13:\n          cryptoKeyCek = _context2.sent;\n          _context2.t2 = Uint8Array;\n          _context2.next = 17;\n          return crypto.subtle.exportKey('raw', cryptoKeyCek);\n        case 17:\n          _context2.t3 = _context2.sent;\n          return _context2.abrupt(\"return\", new _context2.t2(_context2.t3));\n        case 19:\n          throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function decrypt(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["subtleAlgorithm","bogusWebCrypto","crypto","isCryptoKey","checkEncCryptoKey","checkKeyLength","invalidKeyInput","types","encrypt","alg","key","cek","TypeError","usages","includes","Uint8Array","subtle","importKey","cryptoKeyCek","wrapKey","decrypt","encryptedKey","unwrapKey","exportKey"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/runtime/rsaes.js"],"sourcesContent":["import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}