{"ast":null,"code":"var _classCallCheck = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar DefaultGraph = require('./DefaultGraph.js');\nvar Quad = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Quad(subject, predicate, object, graph) {\n    _classCallCheck(this, Quad);\n    this.subject = subject;\n    this.predicate = predicate;\n    this.object = object;\n    if (graph) {\n      this.graph = graph;\n    } else {\n      this.graph = new DefaultGraph();\n    }\n  }\n  _createClass(Quad, [{\n    key: \"equals\",\n    value: function equals(other) {\n      // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n      return !!other && (other.termType === 'Quad' || !other.termType) && other.subject.equals(this.subject) && other.predicate.equals(this.predicate) && other.object.equals(this.object) && other.graph.equals(this.graph);\n    }\n  }]);\n  return Quad;\n}();\nQuad.prototype.termType = 'Quad';\nQuad.prototype.value = '';\nmodule.exports = Quad;","map":{"version":3,"names":["DefaultGraph","require","Quad","subject","predicate","object","graph","other","termType","equals","prototype","value","module","exports"],"sources":["E:/react-todo-app/node_modules/@rdfjs/data-model/lib/Quad.js"],"sourcesContent":["const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n"],"mappings":";;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAAA,IAE3CC,IAAI;EAAA;;EACR,cAAaC,OAAO,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAE;IAAA;IAC9C,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,MAAM,GAAGA,MAAM;IAEpB,IAAIC,KAAK,EAAE;MACT,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,MAAM;MACL,IAAI,CAACA,KAAK,GAAG,IAAIN,YAAY,EAAE;IACjC;EACF;EAAC;IAAA;IAAA,OAED,gBAAQO,KAAK,EAAE;MACb;MACA,OAAO,CAAC,CAACA,KAAK,KAAKA,KAAK,CAACC,QAAQ,KAAK,MAAM,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,IAC9DD,KAAK,CAACJ,OAAO,CAACM,MAAM,CAAC,IAAI,CAACN,OAAO,CAAC,IAAII,KAAK,CAACH,SAAS,CAACK,MAAM,CAAC,IAAI,CAACL,SAAS,CAAC,IAC5EG,KAAK,CAACF,MAAM,CAACI,MAAM,CAAC,IAAI,CAACJ,MAAM,CAAC,IAAIE,KAAK,CAACD,KAAK,CAACG,MAAM,CAAC,IAAI,CAACH,KAAK,CAAC;IACtE;EAAC;EAAA;AAAA;AAGHJ,IAAI,CAACQ,SAAS,CAACF,QAAQ,GAAG,MAAM;AAChCN,IAAI,CAACQ,SAAS,CAACC,KAAK,GAAG,EAAE;AAEzBC,MAAM,CAACC,OAAO,GAAGX,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}