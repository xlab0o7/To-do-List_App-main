{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FlattenedSign } from '../flattened/sign.js';\nexport var CompactSign = /*#__PURE__*/function () {\n  function CompactSign(payload) {\n    _classCallCheck(this, CompactSign);\n    this._flattened = new FlattenedSign(payload);\n  }\n  _createClass(CompactSign, [{\n    key: \"setProtectedHeader\",\n    value: function setProtectedHeader(protectedHeader) {\n      this._flattened.setProtectedHeader(protectedHeader);\n      return this;\n    }\n  }, {\n    key: \"sign\",\n    value: function () {\n      var _sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, options) {\n        var jws;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this._flattened.sign(key, options);\n            case 2:\n              jws = _context.sent;\n              if (!(jws.payload === undefined)) {\n                _context.next = 5;\n                break;\n              }\n              throw new TypeError('use the flattened module for creating JWS with b64: false');\n            case 5:\n              return _context.abrupt(\"return\", \"\".concat(jws.protected, \".\").concat(jws.payload, \".\").concat(jws.signature));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function sign(_x, _x2) {\n        return _sign.apply(this, arguments);\n      }\n      return sign;\n    }()\n  }]);\n  return CompactSign;\n}();","map":{"version":3,"names":["FlattenedSign","CompactSign","payload","_flattened","protectedHeader","setProtectedHeader","key","options","sign","jws","undefined","TypeError","protected","signature"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jws/compact/sign.js"],"sourcesContent":["import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n"],"mappings":";;;;AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,WAAaC,WAAW;EACpB,qBAAYC,OAAO,EAAE;IAAA;IACjB,IAAI,CAACC,UAAU,GAAG,IAAIH,aAAa,CAACE,OAAO,CAAC;EAChD;EAAC;IAAA;IAAA,OACD,4BAAmBE,eAAe,EAAE;MAChC,IAAI,CAACD,UAAU,CAACE,kBAAkB,CAACD,eAAe,CAAC;MACnD,OAAO,IAAI;IACf;EAAC;IAAA;IAAA;MAAA,uEACD,iBAAWE,GAAG,EAAEC,OAAO;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACD,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACF,GAAG,EAAEC,OAAO,CAAC;YAAA;cAA9CE,GAAG;cAAA,MACLA,GAAG,CAACP,OAAO,KAAKQ,SAAS;gBAAA;gBAAA;cAAA;cAAA,MACnB,IAAIC,SAAS,CAAC,2DAA2D,CAAC;YAAA;cAAA,2CAE1EF,GAAG,CAACG,SAAS,cAAIH,GAAG,CAACP,OAAO,cAAIO,GAAG,CAACI,SAAS;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAC1D;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}