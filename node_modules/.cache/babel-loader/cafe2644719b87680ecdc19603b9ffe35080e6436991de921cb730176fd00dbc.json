{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction cbcDecrypt(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _cbcDecrypt.apply(this, arguments);\n}\nfunction _cbcDecrypt() {\n  _cbcDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(enc, cek, ciphertext, iv, tag, aad) {\n    var keySize, encKey, macKey, macData, expectedTag, macCheckPassed, plaintext;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (cek instanceof Uint8Array) {\n            _context2.next = 2;\n            break;\n          }\n          throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n        case 2:\n          keySize = parseInt(enc.slice(1, 4), 10);\n          _context2.next = 5;\n          return crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n        case 5:\n          encKey = _context2.sent;\n          _context2.next = 8;\n          return crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n            hash: \"SHA-\".concat(keySize << 1),\n            name: 'HMAC'\n          }, false, ['sign']);\n        case 8:\n          macKey = _context2.sent;\n          macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n          _context2.t0 = Uint8Array;\n          _context2.next = 13;\n          return crypto.subtle.sign('HMAC', macKey, macData);\n        case 13:\n          _context2.t1 = _context2.sent.slice(0, keySize >> 3);\n          expectedTag = new _context2.t0(_context2.t1);\n          try {\n            macCheckPassed = timingSafeEqual(tag, expectedTag);\n          } catch (_a) {}\n          if (macCheckPassed) {\n            _context2.next = 18;\n            break;\n          }\n          throw new JWEDecryptionFailed();\n        case 18:\n          _context2.prev = 18;\n          _context2.t2 = Uint8Array;\n          _context2.next = 22;\n          return crypto.subtle.decrypt({\n            iv: iv,\n            name: 'AES-CBC'\n          }, encKey, ciphertext);\n        case 22:\n          _context2.t3 = _context2.sent;\n          plaintext = new _context2.t2(_context2.t3);\n          _context2.next = 28;\n          break;\n        case 26:\n          _context2.prev = 26;\n          _context2.t4 = _context2[\"catch\"](18);\n        case 28:\n          if (plaintext) {\n            _context2.next = 30;\n            break;\n          }\n          throw new JWEDecryptionFailed();\n        case 30:\n          return _context2.abrupt(\"return\", plaintext);\n        case 31:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[18, 26]]);\n  }));\n  return _cbcDecrypt.apply(this, arguments);\n}\nfunction gcmDecrypt(_x7, _x8, _x9, _x10, _x11, _x12) {\n  return _gcmDecrypt.apply(this, arguments);\n}\nfunction _gcmDecrypt() {\n  _gcmDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(enc, cek, ciphertext, iv, tag, aad) {\n    var encKey;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(cek instanceof Uint8Array)) {\n            _context3.next = 6;\n            break;\n          }\n          _context3.next = 3;\n          return crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n        case 3:\n          encKey = _context3.sent;\n          _context3.next = 8;\n          break;\n        case 6:\n          checkEncCryptoKey(cek, enc, 'decrypt');\n          encKey = cek;\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = Uint8Array;\n          _context3.next = 12;\n          return crypto.subtle.decrypt({\n            additionalData: aad,\n            iv: iv,\n            name: 'AES-GCM',\n            tagLength: 128\n          }, encKey, concat(ciphertext, tag));\n        case 12:\n          _context3.t1 = _context3.sent;\n          return _context3.abrupt(\"return\", new _context3.t0(_context3.t1));\n        case 16:\n          _context3.prev = 16;\n          _context3.t2 = _context3[\"catch\"](8);\n          throw new JWEDecryptionFailed();\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[8, 16]]);\n  }));\n  return _gcmDecrypt.apply(this, arguments);\n}\nvar decrypt = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(enc, cek, ciphertext, iv, tag, aad) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!isCryptoKey(cek) && !(cek instanceof Uint8Array))) {\n            _context.next = 2;\n            break;\n          }\n          throw new TypeError(invalidKeyInput.apply(void 0, [cek].concat(_toConsumableArray(types), ['Uint8Array'])));\n        case 2:\n          checkIvLength(enc, iv);\n          _context.t0 = enc;\n          _context.next = _context.t0 === 'A128CBC-HS256' ? 6 : _context.t0 === 'A192CBC-HS384' ? 6 : _context.t0 === 'A256CBC-HS512' ? 6 : _context.t0 === 'A128GCM' ? 8 : _context.t0 === 'A192GCM' ? 8 : _context.t0 === 'A256GCM' ? 8 : 10;\n          break;\n        case 6:\n          if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(-3), 10));\n          return _context.abrupt(\"return\", cbcDecrypt(enc, cek, ciphertext, iv, tag, aad));\n        case 8:\n          if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n          return _context.abrupt(\"return\", gcmDecrypt(enc, cek, ciphertext, iv, tag, aad));\n        case 10:\n          throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function decrypt(_x13, _x14, _x15, _x16, _x17, _x18) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default decrypt;","map":{"version":3,"names":["concat","uint64be","checkIvLength","checkCekLength","timingSafeEqual","JOSENotSupported","JWEDecryptionFailed","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","cbcDecrypt","enc","cek","ciphertext","iv","tag","aad","Uint8Array","TypeError","keySize","parseInt","slice","subtle","importKey","subarray","encKey","hash","name","macKey","macData","length","sign","expectedTag","macCheckPassed","_a","decrypt","plaintext","gcmDecrypt","additionalData","tagLength"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/runtime/decrypt.js"],"sourcesContent":["import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}