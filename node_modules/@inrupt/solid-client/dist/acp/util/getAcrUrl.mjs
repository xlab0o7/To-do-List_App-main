import { ACP } from '../constants.mjs';
import { getLinkedResourceUrlAll, getSourceUrl } from '../../resource/resource.mjs';
import { getAclServerResourceInfo } from '../../universal/getAclServerResourceInfo.mjs';
import { getAcrUrl as getAcrUrl$1 } from './getAcrUrl.legacy.mjs';

//
/**
 * Retrieve the URL of an Access Control Resource as per the ACP Draft
 * specification.
 *
 * @param resource The Resource for which to retrieve the URL of the Access
 * Control Resource if it is accessible.
 * @returns The URL of the ACR or null.
 */
async function getAcrUrl(resource, options) {
    // TODO: Remove as soon as ESS 1.1 is phased out
    const legacyAcrUrl = getAcrUrl$1(resource);
    if (legacyAcrUrl !== null) {
        return legacyAcrUrl;
    }
    // The ACP Draft mandates a link rel="type" header identifies Access Control Resources
    const aclServerResourceInfo = await getAclServerResourceInfo(resource, options);
    if (aclServerResourceInfo === null) {
        return null;
    }
    const relTypeLinks = getLinkedResourceUrlAll(aclServerResourceInfo).type;
    if (Array.isArray(relTypeLinks) &&
        relTypeLinks.includes(ACP.AccessControlResource)) {
        return getSourceUrl(aclServerResourceInfo);
    }
    return null;
}

export { getAcrUrl };
