{"ast":null,"code":"'use strict';\n\nconst {\n  ArrayPrototypePop,\n  Promise\n} = require('../ours/primordials');\nconst {\n  isIterable,\n  isNodeStream\n} = require('../internal/streams/utils');\nconst {\n  pipelineImpl: pl\n} = require('../internal/streams/pipeline');\nconst {\n  finished\n} = require('../internal/streams/end-of-stream');\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  return new Promise((resolve, reject) => {\n    let signal;\n    let end;\n    const lastArg = streams[streams.length - 1];\n    if (lastArg && typeof lastArg === 'object' && !isNodeStream(lastArg) && !isIterable(lastArg)) {\n      const options = ArrayPrototypePop(streams);\n      signal = options.signal;\n      end = options.end;\n    }\n    pl(streams, (err, value) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(value);\n      }\n    }, {\n      signal,\n      end\n    });\n  });\n}\nmodule.exports = {\n  finished,\n  pipeline\n};","map":{"version":3,"names":["ArrayPrototypePop","Promise","require","isIterable","isNodeStream","pipelineImpl","pl","finished","pipeline","streams","resolve","reject","signal","end","lastArg","length","options","err","value","module","exports"],"sources":["G:/To-do-List_App-main/node_modules/n3/node_modules/readable-stream/lib/stream/promises.js"],"sourcesContent":["'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (lastArg && typeof lastArg === 'object' && !isNodeStream(lastArg) && !isIterable(lastArg)) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,iBAAiB;EAAEC;AAAQ,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACrE,MAAM;EAAEC,UAAU;EAAEC;AAAa,CAAC,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AACzE,MAAM;EAAEG,YAAY,EAAEC;AAAG,CAAC,GAAGJ,OAAO,CAAC,8BAA8B,CAAC;AACpE,MAAM;EAAEK;AAAS,CAAC,GAAGL,OAAO,CAAC,mCAAmC,CAAC;AACjE,SAASM,QAAQ,GAAa;EAAA,kCAATC,OAAO;IAAPA,OAAO;EAAA;EAC1B,OAAO,IAAIR,OAAO,CAAC,CAACS,OAAO,EAAEC,MAAM,KAAK;IACtC,IAAIC,MAAM;IACV,IAAIC,GAAG;IACP,MAAMC,OAAO,GAAGL,OAAO,CAACA,OAAO,CAACM,MAAM,GAAG,CAAC,CAAC;IAC3C,IAAID,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAI,CAACV,YAAY,CAACU,OAAO,CAAC,IAAI,CAACX,UAAU,CAACW,OAAO,CAAC,EAAE;MAC5F,MAAME,OAAO,GAAGhB,iBAAiB,CAACS,OAAO,CAAC;MAC1CG,MAAM,GAAGI,OAAO,CAACJ,MAAM;MACvBC,GAAG,GAAGG,OAAO,CAACH,GAAG;IACnB;IACAP,EAAE,CACAG,OAAO,EACP,CAACQ,GAAG,EAAEC,KAAK,KAAK;MACd,IAAID,GAAG,EAAE;QACPN,MAAM,CAACM,GAAG,CAAC;MACb,CAAC,MAAM;QACLP,OAAO,CAACQ,KAAK,CAAC;MAChB;IACF,CAAC,EACD;MACEN,MAAM;MACNC;IACF,CAAC,CACF;EACH,CAAC,CAAC;AACJ;AACAM,MAAM,CAACC,OAAO,GAAG;EACfb,QAAQ;EACRC;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}