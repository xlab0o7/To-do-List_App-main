{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport function jwtDecrypt(_x, _x2, _x3) {\n  return _jwtDecrypt.apply(this, arguments);\n}\nfunction _jwtDecrypt() {\n  _jwtDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwt, key, options) {\n    var decrypted, payload, protectedHeader, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return compactDecrypt(jwt, key, options);\n        case 2:\n          decrypted = _context.sent;\n          payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n          protectedHeader = decrypted.protectedHeader;\n          if (!(protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss)) {\n            _context.next = 7;\n            break;\n          }\n          throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n        case 7:\n          if (!(protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub)) {\n            _context.next = 9;\n            break;\n          }\n          throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n        case 9:\n          if (!(protectedHeader.aud !== undefined && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud))) {\n            _context.next = 11;\n            break;\n          }\n          throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n        case 11:\n          result = {\n            payload: payload,\n            protectedHeader: protectedHeader\n          };\n          if (!(typeof key === 'function')) {\n            _context.next = 14;\n            break;\n          }\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, result), {}, {\n            key: decrypted.key\n          }));\n        case 14:\n          return _context.abrupt(\"return\", result);\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _jwtDecrypt.apply(this, arguments);\n}","map":{"version":3,"names":["compactDecrypt","jwtPayload","JWTClaimValidationFailed","jwtDecrypt","jwt","key","options","decrypted","payload","protectedHeader","plaintext","iss","undefined","sub","aud","JSON","stringify","result"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jwt/decrypt.js"],"sourcesContent":["import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n"],"mappings":";;;AAAA,SAASA,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,wBAAwB,QAAQ,mBAAmB;AAC5D,gBAAsBC,UAAU;EAAA;AAAA;AAmB/B;EAAA,yEAnBM,iBAA0BC,GAAG,EAAEC,GAAG,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OACtBN,cAAc,CAACI,GAAG,EAAEC,GAAG,EAAEC,OAAO,CAAC;QAAA;UAAnDC,SAAS;UACTC,OAAO,GAAGP,UAAU,CAACM,SAAS,CAACE,eAAe,EAAEF,SAAS,CAACG,SAAS,EAAEJ,OAAO,CAAC;UAC3EG,eAAe,GAAKF,SAAS,CAA7BE,eAAe;UAAA,MACnBA,eAAe,CAACE,GAAG,KAAKC,SAAS,IAAIH,eAAe,CAACE,GAAG,KAAKH,OAAO,CAACG,GAAG;YAAA;YAAA;UAAA;UAAA,MAClE,IAAIT,wBAAwB,CAAC,kDAAkD,EAAE,KAAK,EAAE,UAAU,CAAC;QAAA;UAAA,MAEzGO,eAAe,CAACI,GAAG,KAAKD,SAAS,IAAIH,eAAe,CAACI,GAAG,KAAKL,OAAO,CAACK,GAAG;YAAA;YAAA;UAAA;UAAA,MAClE,IAAIX,wBAAwB,CAAC,kDAAkD,EAAE,KAAK,EAAE,UAAU,CAAC;QAAA;UAAA,MAEzGO,eAAe,CAACK,GAAG,KAAKF,SAAS,IACjCG,IAAI,CAACC,SAAS,CAACP,eAAe,CAACK,GAAG,CAAC,KAAKC,IAAI,CAACC,SAAS,CAACR,OAAO,CAACM,GAAG,CAAC;YAAA;YAAA;UAAA;UAAA,MAC7D,IAAIZ,wBAAwB,CAAC,kDAAkD,EAAE,KAAK,EAAE,UAAU,CAAC;QAAA;UAEvGe,MAAM,GAAG;YAAET,OAAO,EAAPA,OAAO;YAAEC,eAAe,EAAfA;UAAgB,CAAC;UAAA,MACvC,OAAOJ,GAAG,KAAK,UAAU;YAAA;YAAA;UAAA;UAAA,iEACbY,MAAM;YAAEZ,GAAG,EAAEE,SAAS,CAACF;UAAG;QAAA;UAAA,iCAEnCY,MAAM;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAChB;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}