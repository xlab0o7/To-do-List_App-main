{"ast":null,"code":"import _regeneratorRuntime from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"E:/react-todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport function compactDecrypt(_x, _x2, _x3) {\n  return _compactDecrypt.apply(this, arguments);\n}\nfunction _compactDecrypt() {\n  _compactDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(jwe, key, options) {\n    var _jwe$split, protectedHeader, encryptedKey, iv, ciphertext, tag, length, decrypted, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (jwe instanceof Uint8Array) {\n            jwe = decoder.decode(jwe);\n          }\n          if (!(typeof jwe !== 'string')) {\n            _context.next = 3;\n            break;\n          }\n          throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n        case 3:\n          _jwe$split = jwe.split('.'), protectedHeader = _jwe$split[0], encryptedKey = _jwe$split[1], iv = _jwe$split[2], ciphertext = _jwe$split[3], tag = _jwe$split[4], length = _jwe$split.length;\n          if (!(length !== 5)) {\n            _context.next = 6;\n            break;\n          }\n          throw new JWEInvalid('Invalid Compact JWE');\n        case 6:\n          _context.next = 8;\n          return flattenedDecrypt({\n            ciphertext: ciphertext,\n            iv: iv || undefined,\n            protected: protectedHeader || undefined,\n            tag: tag || undefined,\n            encrypted_key: encryptedKey || undefined\n          }, key, options);\n        case 8:\n          decrypted = _context.sent;\n          result = {\n            plaintext: decrypted.plaintext,\n            protectedHeader: decrypted.protectedHeader\n          };\n          if (!(typeof key === 'function')) {\n            _context.next = 12;\n            break;\n          }\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, result), {}, {\n            key: decrypted.key\n          }));\n        case 12:\n          return _context.abrupt(\"return\", result);\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _compactDecrypt.apply(this, arguments);\n}","map":{"version":3,"names":["flattenedDecrypt","JWEInvalid","decoder","compactDecrypt","jwe","key","options","Uint8Array","decode","split","protectedHeader","encryptedKey","iv","ciphertext","tag","length","undefined","protected","encrypted_key","decrypted","result","plaintext"],"sources":["E:/react-todo-app/node_modules/jose/dist/browser/jwe/compact/decrypt.js"],"sourcesContent":["import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n"],"mappings":";;;AAAA,SAASA,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,gBAAsBC,cAAc;EAAA;AAAA;AAuBnC;EAAA,6EAvBM,iBAA8BC,GAAG,EAAEC,GAAG,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAClD,IAAIF,GAAG,YAAYG,UAAU,EAAE;YAC3BH,GAAG,GAAGF,OAAO,CAACM,MAAM,CAACJ,GAAG,CAAC;UAC7B;UAAC,MACG,OAAOA,GAAG,KAAK,QAAQ;YAAA;YAAA;UAAA;UAAA,MACjB,IAAIH,UAAU,CAAC,4CAA4C,CAAC;QAAA;UAAA,aAEiBG,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,EAA1FC,eAAe,cAAlB,CAAC,GAAsBC,YAAY,cAAf,CAAC,GAAmBC,EAAE,cAAL,CAAC,GAASC,UAAU,cAAb,CAAC,GAAiBC,GAAG,cAAN,CAAC,GAAOC,MAAM,cAANA,MAAM;UAAA,MAC7EA,MAAM,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA,MACN,IAAId,UAAU,CAAC,qBAAqB,CAAC;QAAA;UAAA;UAAA,OAEvBD,gBAAgB,CAAC;YACrCa,UAAU,EAAVA,UAAU;YACVD,EAAE,EAAGA,EAAE,IAAII,SAAU;YACrBC,SAAS,EAAEP,eAAe,IAAIM,SAAS;YACvCF,GAAG,EAAGA,GAAG,IAAIE,SAAU;YACvBE,aAAa,EAAEP,YAAY,IAAIK;UACnC,CAAC,EAAEX,GAAG,EAAEC,OAAO,CAAC;QAAA;UANVa,SAAS;UAOTC,MAAM,GAAG;YAAEC,SAAS,EAAEF,SAAS,CAACE,SAAS;YAAEX,eAAe,EAAES,SAAS,CAACT;UAAgB,CAAC;UAAA,MACzF,OAAOL,GAAG,KAAK,UAAU;YAAA;YAAA;UAAA;UAAA,iEACbe,MAAM;YAAEf,GAAG,EAAEc,SAAS,CAACd;UAAG;QAAA;UAAA,iCAEnCe,MAAM;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAChB;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}