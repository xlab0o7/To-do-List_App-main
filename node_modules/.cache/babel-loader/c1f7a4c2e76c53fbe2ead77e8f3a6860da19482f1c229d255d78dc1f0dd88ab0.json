{"ast":null,"code":"var _classCallCheck = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"E:/react-todo-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar NamedNode = require('./NamedNode.js');\nvar Literal = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Literal(value, language, datatype) {\n    _classCallCheck(this, Literal);\n    this.value = value;\n    this.datatype = Literal.stringDatatype;\n    this.language = '';\n    if (language) {\n      this.language = language;\n      this.datatype = Literal.langStringDatatype;\n    } else if (datatype) {\n      this.datatype = datatype;\n    }\n  }\n  _createClass(Literal, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return !!other && other.termType === this.termType && other.value === this.value && other.language === this.language && other.datatype.equals(this.datatype);\n    }\n  }]);\n  return Literal;\n}();\nLiteral.prototype.termType = 'Literal';\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string');\nmodule.exports = Literal;","map":{"version":3,"names":["NamedNode","require","Literal","value","language","datatype","stringDatatype","langStringDatatype","other","termType","equals","prototype","module","exports"],"sources":["E:/react-todo-app/node_modules/@rdfjs/data-model/lib/Literal.js"],"sourcesContent":["const NamedNode = require('./NamedNode.js')\n\nclass Literal {\n  constructor (value, language, datatype) {\n    this.value = value\n    this.datatype = Literal.stringDatatype\n    this.language = ''\n\n    if (language) {\n      this.language = language\n      this.datatype = Literal.langStringDatatype\n    } else if (datatype) {\n      this.datatype = datatype\n    }\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype)\n  }\n}\n\nLiteral.prototype.termType = 'Literal'\n\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\n\nmodule.exports = Literal\n"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAAA,IAErCC,OAAO;EAAA;;EACX,iBAAaC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAAA;IACtC,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,QAAQ,GAAGH,OAAO,CAACI,cAAc;IACtC,IAAI,CAACF,QAAQ,GAAG,EAAE;IAElB,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACK,kBAAkB;IAC5C,CAAC,MAAM,IAAIF,QAAQ,EAAE;MACnB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B;EACF;EAAC;IAAA;IAAA,OAED,gBAAQG,KAAK,EAAE;MACb,OAAO,CAAC,CAACA,KAAK,IAAIA,KAAK,CAACC,QAAQ,KAAK,IAAI,CAACA,QAAQ,IAAID,KAAK,CAACL,KAAK,KAAK,IAAI,CAACA,KAAK,IAC9EK,KAAK,CAACJ,QAAQ,KAAK,IAAI,CAACA,QAAQ,IAAII,KAAK,CAACH,QAAQ,CAACK,MAAM,CAAC,IAAI,CAACL,QAAQ,CAAC;IAC5E;EAAC;EAAA;AAAA;AAGHH,OAAO,CAACS,SAAS,CAACF,QAAQ,GAAG,SAAS;AAEtCP,OAAO,CAACK,kBAAkB,GAAG,IAAIP,SAAS,CAAC,uDAAuD,CAAC;AACnGE,OAAO,CAACI,cAAc,GAAG,IAAIN,SAAS,CAAC,yCAAyC,CAAC;AAEjFY,MAAM,CAACC,OAAO,GAAGX,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}